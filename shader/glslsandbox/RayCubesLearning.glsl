{"code": "/*\n * Original shader from: https://www.shadertoy.com/view/4ljSDt\n */\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 resolution;\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat map(vec3 p)\n{\n    vec3 q = fract(p) * 2.0 - 1.0;\n    //return length(q) - 0.1;\n    return sdBox(q, vec3(0.25));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i)\n    {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid main(void)\n{\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= resolution.x / resolution.y;\n    \n    vec3 r = normalize(vec3(uv, 2.0));\n    float the = time * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    vec3 o = vec3(0.0, time, time);\n    \n    float st = (sin(time) + 1.5) * 0.4;\n    \n    float t = trace(o, r * st);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    \n    vec3 fc = vec3(fog * 2.0);\n    \n    vec3 tint = vec3(st - 0.5,st,st + 0.5);\n    gl_FragColor = vec4(fc * tint, 1.0);\n}", "user": "aeae4ba", "parent": null, "id": "45334.0"}