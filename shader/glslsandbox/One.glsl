{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nfloat pi = 3.14159265;\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\nvoid main( void ) {\n\n\tvec2 p = ( gl_FragCoord.xy / resolution.xy ) * 2.0 - 1.0;\n\n\tfloat a = atan( p.y, p.x );\n\tfloat r = sqrt( dot( p, p ) );\n\n\tvec2 uv = vec2( 0, 0 );\n\tuv.x = mod( mouse.x * cos( a ) / r + time * 0.05, 1.0 );\n\tuv.y = mod( mouse.y * sin( a ) / r + time * 0.06, 1.0 );\n\t\n\tfloat amount = sin( time * 0.5 ) * 0.01;\n\n\tvec4 color0 = texture2D( backbuffer, uv );\n\tvec4 color1 = texture2D( backbuffer, uv + vec2( 0.0, - amount ) );\n\tvec4 color2 = texture2D( backbuffer, uv + vec2( 0.0, amount ) );\n\tvec4 color3 = texture2D( backbuffer, uv + vec2( amount, 0.0 ) );\n\tvec4 color4 = texture2D( backbuffer, uv + vec2( - amount, 0.0 ) );\n\n\tgl_FragColor = ( ( color0 + color1 + color2 + color3 + color4 ) / 8.0 ) + pow( 1.0 - r, 3.0 );\n\n\tfloat border = 0.95;\n\n\tif ( p.x < - border || p.x > border || p.y < - border || p.y > border ) {\n\n\t\tgl_FragColor = vec4( p.x + p.y );\n\n\t}\n\n}", "user": false, "parent": null, "id": "1.0"}