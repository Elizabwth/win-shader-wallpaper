{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat opU( float d1, float d2 )\n{\n    return min(d1,d2);\n}\n\nfloat opS( float d1, float d2 )\n{\n    return max(-d1,d2);\n}\n\nfloat opI( float d1, float d2 )\n{\n    return max(d1,d2);\n}\n\nfloat sdCircle(float r, vec2 p)\n{\n\treturn length(p) - r;\n}\n\nfloat sdBox(vec2 s, vec2 p)\n{\n    p = abs(p) - s / 2.0;\n    return max(p.x,p.y);\n}\n\nfloat map(vec2 p)\n{\n\tfloat dist = 1e6;\n\t\n\tvec2 p1 = mod(p, vec2(0.25)) - 0.125;\n\tvec2 p2 = mod(p - 0.125, vec2(0.25)) - 0.125;\n\t\n\tdist = opU(dist, sdBox(vec2(0.04), p1));\n\tdist = opU(dist, sdCircle(0.04, p2));\n\t\n\treturn dist;\n}\n\nfloat shadow(vec2 p, vec2 l)\n{\n\tvec2 dir = normalize(l - p);\n\tfloat dist = distance(p, l);\n\tfloat t = 0.0;\n\tfloat s = 1.0;\n\tfor(int i = 0;i < 96;i++)\n\t{\n\t\tfloat sd = map(p + dir * t);\n\t\tt += sd * 0.25;\n\t\t\n\t\ts = min(s, 16.0*sd/t);\n\t\t\n\t\tif(sd < 0.0001 || t > dist)\n\t\t{\n\t\t\tbreak;\t\n\t\t}\n\t}\n\t\n\treturn (t < dist) ?  0.0 : s;\n}\n\nvoid main( void ) \n{\n\tvec2 aspect = resolution.xy / resolution.y;\n\tvec2 uv = ( gl_FragCoord.xy / resolution.y ) - aspect/2.0;\n\tvec2 mo = mouse * aspect - aspect/2.0;\n\t\n\tvec3 color = vec3(0.0);\n\t\n\tfloat d = map(uv);\n\t\n\tvec2 li = mo;//vec2(0.06,0.05);\n\t\n\tvec3 bg = vec3(0.5);\n\tbg *= smoothstep(-0.02,0.02,d);\n\tbg *= (shadow(uv, li) * max(0.0, 1.0 - distance(uv,li) * 2.5))*0.75+0.125;\n\t\n\tvec3 fg = vec3(1.0,0.5,0.0);\n\t\n\tcolor = mix(fg, bg, smoothstep(0.000,0.001,map(uv)));\n\t\n\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n}", "user": "a8250a4", "parent": null, "id": "27539.1"}