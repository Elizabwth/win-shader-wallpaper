{"code": "// fuck that shit.\n\n// CBS\n// ported from https://www.shadertoy.com/view/lslGWr\n// Added some stars: Thanks to http://glsl.heroku.com/e#6904.0\n// Modified for use\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n// http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\nfloat field(in vec3 p) {\n\tfloat strength = 7. + .03 * log(1.e-6 + fract(sin(time) * 4373.11));\n\tfloat accum = 0.;\n\tfloat prev = 0.;\n\tfloat tw = 0.;\n\tfor (int i = 0; i < 24; ++i) {\n\t\tfloat mag = dot(p, p);\n\t\tp = abs(p) / mag + vec3(-.51, -.4, -1.3);\n\t\tfloat w = exp(-float(i) / 7.);\n\t\taccum += w * exp(-strength * pow(abs(mag - prev), 2.3));\n\t\ttw += w;\n\t\tprev = mag;\n\t}\n\treturn max(0., 5. * accum / tw - .7);\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat stars(float slow_time, vec2 position) {\n\t\n\tfloat brightness = 0.;\n\t\n\tfor (int i = 0; i < 100; i++) {\n\t\t\n\t\tvec2 rand_pos = vec2(rand(vec2(i)),rand(vec2(i+1)))*2.;\n\t\tfloat scale = pow(rand(vec2(i+2)),2.);\n\t\t\n\t\tvec2 l_pos = rand_pos - .15*vec2(sin(slow_time/16.), sin(slow_time/12.))*scale;\n\t\t\n\t\tl_pos = mod(l_pos,2.)-1.;\n\t\tl_pos *= 1.03;\n\t\t\n\t\tvec2 dist = abs(l_pos - position);\n\t\tdist.x = min(dist.x,.1);\n\t\tdist.y = min(dist.y,.1);\n\t\t\n\t\t//float intensity = 1. - (pow(dist.x, .5*scale) + pow(dist.y, .1-.05*scale));\n\t\tfloat intensity = .0005*scale/sqrt(pow(dist.x,2.)+pow(dist.y,2.));\n\t\tintensity = clamp(intensity * 1., 0., 1.);\n\t\t\n\t\tbrightness = brightness + pow(4. * intensity, 2.);\n\t}\n\t\treturn brightness;\n}\n\nvec3 nrand3( vec2 co )\n{\n\tvec3 a = fract( cos( co.x*8.3e-3 + co.y )*vec3(1.3e5, 4.7e5, 2.9e5) );\n\tvec3 b = fract( sin( co.x*0.3e-3 + co.y )*vec3(8.1e5, 1.0e5, 0.1e5) );\n\tvec3 c = mix(a, b, 1111110.5);\n\treturn c;\n}\n\n\nvoid main() {\n\tvec2 uv = 2.0 * gl_FragCoord.xy / resolution.xy - 1.0;\n\tvec2 uvs = uv * resolution.xy / max(resolution.x, resolution.y);\n\tfloat realtime = time*3.;\n\t\n\tvec3 p = vec3(uvs / 4., 0) + vec3(2., -1.3, -1.);\n\tp += 0.15 * vec3(sin(realtime / 16.), sin(realtime / 12.),  sin(realtime / 128.));\n\t\n\tvec3 p2 = vec3(uvs / (4.+sin(realtime*0.11)*0.2+0.2+sin(realtime*0.15)*0.3+0.4), 1.5) + vec3(2., -1.3, -1.);\n\tp2 += 0.15 * vec3(sin(realtime / 16.), sin(realtime / 12.),  sin(realtime / 128.));\n\t\n\tfloat t = field(p);\n\tfloat t2 = field(p2);\n\tfloat v = (1. - exp((abs(uv.x) - 10.) * 6.)) * (1. - exp((abs(uv.y) - 1.) * 6.));\n\t\n\tvec4 c1 = mix(.4, 1., v) * vec4(1.8 * t * t * t, 1.4 * t * t, t, 1.0);\n\tvec4 c2 = mix(.4, 1., v) * vec4((sin(realtime/7.)+1.+uvs.x/16.+uvs.y/32.) * t2 * t2 * t2 * (t+9.)/10., (sin(realtime/11.)+1.-uvs.x/16.-uvs.y/32.) * t2 * t2, t2, sin(realtime/19.)/2.+.5);\n\t//c1.b *= mod(gl_FragCoord.y+1.0, 2.0)*1.4;\n\tc2.r *= mod(gl_FragCoord.y, 1.0)*7.4;\n\tgl_FragColor = (c1 + c2)*.8-.3;//+stars(realtime,uvs);\n\tgl_FragColor += vec4(vec3(stars(realtime,uvs)),1.0);\n\t\n}", "user": "4ac0767", "parent": "/e#12270.0", "id": "13255.0"}