{"code": "#\n#\n#\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nuniform sampler2D tex0;\n\nfloat drawSphere( vec3 position, float size ) \n{ \n\treturn length(position)-size; \n}\n\nfloat drawQuad( vec3 position, vec3 size ) \n{ \n\treturn length(max(abs(position)-size,0.0));\n}\n\nfloat drawTorus( vec3 position, vec2 size )\n{\n  vec2 q = vec2(length(position.xz)-size.x,position.y);\n  return length(q)-size.y;\n}\n\nvec3 field(vec3 p) {\n\tp = abs(fract(p)-.5);\n\tp *= p;\n\treturn sqrt(p+p.yzx*p.zzy)-.015;\n}\n\nvec4 ray(vec3 pos) \n{\n    vec3 col = vec3(0.);\n    const float ray_n= 32.;\n\tfor(float i=0.;i<ray_n;i++)\n\t\t{\n\t\t\tvec3 field = field(pos);\n\t\t\tfloat sphere = drawSphere(pos-vec3(0.,1.0,1.0),0.5);\n\t\t\tfloat torus = drawTorus(pos-vec3(0.,0.,1.0),vec2(0.5,0.5));\n  \t\t\tfloat quad = drawQuad(pos-vec3(0.,-1.0,1.0),vec3(0.5));\n\t\t\tpos.xyz+=sphere*torus*quad;\n\t\t\t\n\t\t\tcol +=  max(vec3(0.0), (0.05 - abs(sin(pos.x * i * 0.8 + time + i * 0.3) - vec3(pos.y)) * .2) * 3.) ;\n\t\t\t//col = vec4(vec3(sphere),.0);\n\t\t}\n\treturn vec4(col,1.);\n}\n\nvoid main( void ) \n{\n  vec3 p = vec3((gl_FragCoord.xy / resolution.xy) * 2. -1., 1.0);\n  p.x *= resolution.x/resolution.y;\n  vec3 t = vec3(0.,sin(time),0.);\n  //vec3 t = vec3(0.,sin(time),sin(time));\n  gl_FragColor = ray(p+t);\n}", "user": "d5b33", "parent": null, "id": "8589.0"}