{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n//Edit of e#27059.8 for easier typing\n\nfloat SCALE = 1.0;\nvec2 SPR_SIZE = vec2(6, 8);\n\nvec2 start = vec2(0,0);\nvec2 tuv = vec2(0,0);\nvec2 chp = vec2(0,0);\nvec2 cur = vec2(0,0);\nvec2 char = vec2(0,0);\n\n#define NL nl();\n#define _ spc();\n#define A ch(vec2(0x7228BE, 0x8A2000));\n#define B ch(vec2(0xF22F22, 0x8BC000));\n#define C ch(vec2(0x722820, 0x89C000));\n#define D ch(vec2(0xE248A2, 0x938000));\n#define E ch(vec2(0xFA0E20, 0x83E000));\n#define F ch(vec2(0xFA0E20, 0x820000));\n#define G ch(vec2(0x72282E, 0x89C000));\n#define H ch(vec2(0x8A2FA2, 0x8A2000));\n#define I ch(vec2(0xF88208, 0x23E000));\n#define J ch(vec2(0xF84104, 0x918000));\n#define K ch(vec2(0x8A4A34, 0x8A2000));\n#define L ch(vec2(0x820820, 0x83E000));\n#define M ch(vec2(0x8B6AA2, 0x8A2000));\n#define N ch(vec2(0x8B2AA6, 0x8A2000));\n#define O ch(vec2(0x7228A2, 0x89C000));\n#define P ch(vec2(0xF228BC, 0x820000));\n#define Q ch(vec2(0x7228AA, 0x99E000));\n#define R ch(vec2(0xF228BC, 0x8A2000));\n#define S ch(vec2(0x7A0702, 0x0BC000));\n#define T ch(vec2(0xF88208, 0x208000));\n#define U ch(vec2(0x8A28A2, 0x89C000));\n#define V ch(vec2(0x8A28A2, 0x508000));\n#define W ch(vec2(0x8A28AA, 0xDA2000));\n#define X ch(vec2(0x8A2722, 0x8A2000));\n#define Y ch(vec2(0x8A2782, 0x89C000));\n#define Z ch(vec2(0xF84210, 0x83E000));\n#define _0 ch(vec2(0x732AA6, 0x89C000));\n#define _1 ch(vec2(0x218208, 0x23E000));\n#define _2 ch(vec2(0x722108, 0x43E000));\n#define _3 ch(vec2(0x722302, 0x89C000));\n#define _4 ch(vec2(0x92491E, 0x104000));\n#define _5 ch(vec2(0xFA0F02, 0x89C000));\n#define _6 ch(vec2(0x72283C, 0x89C000));\n#define _7 ch(vec2(0xF82108, 0x420000));\n#define _8 ch(vec2(0x722722, 0x89C000));\n#define _9 ch(vec2(0x722782, 0x89C000));\n#define PER ch(vec2(0x000000, 0x008000));\n#define EXC ch(vec2(0x208208, 0x008000));\n#define COM ch(vec2(0x000000, 0x008400));\n#define COL ch(vec2(0x008000, 0x008000));\n#define SOL ch(vec2(0x008000, 0x008400));\n#define PLS ch(vec2(0x00823E, 0x208000));\n#define DSH ch(vec2(0x00003E, 0x000000));\n#define DIV ch(vec2(0x002108, 0x420000));\n#define AST ch(vec2(0x000508, 0x500000));\n#define LBR ch(vec2(0x084104, 0x102000));\n#define RBR ch(vec2(0x810410, 0x420000));\n#define LSB ch(vec2(0x184104, 0x106000));\n#define RSB ch(vec2(0xC10410, 0x430000));\n#define LCB ch(vec2(0x184208, 0x106000));\n#define RCB ch(vec2(0xC10208, 0x430000));\n#define LES ch(vec2(0x084208, 0x102000));\n#define GRT ch(vec2(0x408104, 0x210000));\n#define SQO ch(vec2(0x208000, 0x000000));\n#define DQO ch(vec2(0x514000, 0x000000));\n#define QUE ch(vec2(0x72208C, 0x008000));\n#define PCT ch(vec2(0x022108, 0x422000));\n#define DOL ch(vec2(0x21EA1C, 0x2BC200));\n#define NUM ch(vec2(0x53E514, 0xF94000));\n#define ATS ch(vec2(0x722BAA, 0xA9C000));\n#define EQU ch(vec2(0x000F80, 0xF80000));\n#define TDL ch(vec2(0x42A100, 0x000000));\n#define RSL ch(vec2(0x020408, 0x102000));\n#define CRT ch(vec2(0x214880, 0x000000));\n#define AMP ch(vec2(0x42842C, 0x99C000));\n#define BAR ch(vec2(0x208208, 0x208208));\n#define BLK ch(vec2(0xFFFFFF, 0xFFFFFF));\n#define TRD ch(vec2(0xFD5FD5, 0xFD5FD5));\n#define HLF ch(vec2(0xA95A95, 0xA95A95));\n#define QRT ch(vec2(0xA80A80, 0xA80A80));\n\nfloat sprite(vec2 ch,vec2 uv)\n{\n\tuv = floor(uv);\n\tvec2 b = vec2((SPR_SIZE.x - uv.x - 1.0) + uv.y * SPR_SIZE.x) - vec2(24,0);\n\tvec2 p = mod(floor(ch / exp2(clamp(b,-1.0, 25.0))), 2.0);\n\treturn dot(p,vec2(1)) * float(all(bvec4(greaterThanEqual(uv,vec2(0)), lessThan(uv,SPR_SIZE))));\n}\n\nvoid ch(vec2 ch)\n{\n\tif(floor(chp) == floor(cur))\n\t{\n\t\tchar = ch;\n\t}\n\tcur.x++;\n}\n\nvoid digit(float n)\n{\n\tn = mod(floor(n),10.0);\n\tif(n == 0.0) { _0 }\n\tif(n == 1.0) { _1 }\n\tif(n == 2.0) { _2 }\n\tif(n == 3.0) { _3 }\n\tif(n == 4.0) { _4 }\n\tif(n == 5.0) { _5 }\n\tif(n == 6.0) { _6 }\n\tif(n == 7.0) { _7 }\n\tif(n == 8.0) { _8 }\n\tif(n == 9.0) { _9 }\n}\n\nvoid start_print(vec2 uv)\n{\n\tcur = uv;\n\tstart = uv;\n}\n\nvoid spc()\n{\n\tcur.x++;\n}\nvoid nl()\n{\n\tcur.x = start.x;\n\tcur.y--;\n}\n\nvoid number(float n)\n{\n\tfor(int i = 5;i > -3;i--)\n\t{\n\t\tfloat d = n/pow(10.0, float(i));\n\t\tif(i == -1){ PER }\n\t\tif(d > 1.0 || i <= 0){ digit(d); }\n\t}\t\n}\n\nvoid integer(int n)\n{\n\tfor(int i = 5;i >= 0;i--)\n\t{\n\t\tfloat d = float(n)/pow(10.0, float(i));\n\t\tif(i == -1){ PER }\n\t\tif(d > 1.0 || i <= 0){ digit(d); }\n\t}\n}\n\nvec2 str_size(vec2 cl)\n{\n\treturn SPR_SIZE * cl;\n}\n\nvoid main( void ) \n{\n\tvec2 aspect = resolution.xy / resolution.y;\n\tvec2 uv = ( gl_FragCoord.xy ) / SCALE;\n\t\n\tchp = floor(uv/SPR_SIZE);\n\tvec2 cuv = mod(uv,SPR_SIZE);\n\t\n\ttuv = floor(cuv);\n\t\n\tvec2 cen = (resolution / (SPR_SIZE * SCALE)) / 2.0;\n\t\n\tcen -= vec2(37,6)/2.0;\n\t\n\tcen.y += 9.0;\n\t\n\tcen = floor(cen);\n\t\n\tstart_print(cen);\n\t\n\tH E L L O _ W O R L D EXC NL NL\n\t\n\tT H I S _ T E X T _ I S _ O N _ L I N E _ integer(__LINE__); PER NL\n\t\t\n\tT H I S _ S H A D E R _ U S E S _ G L S L _ V E R S I O N _ integer(__VERSION__); PER NL\n\t\n\tT H E _ V I E W P O R T _ I S _ integer(int(resolution.x)); _ X _ integer(int(resolution.y)); PER NL\n\t\t\n\tY O U _ H A V E _ B E E N _ H E R E _ F O R _ number(time/60.0); _ M I N U T E S PER NL\n\t\t\n\tY O U R _ M O U S E _ I S _ A T _ integer(int(mouse.x*resolution.x)); COM _ integer(int(mouse.y*resolution.y)); PER NL\n\t\t\n\tT H I S _ T E X T _ S T A R T S _ A T _ integer(int(start.x)); COM _ integer(int(start.y)); PER NL\n\t\t\n\tstart_print(vec2(0,0));\t\n\t\n\tT H I S _ T E X T _ I S _ I N _ T H E _ C O R N E R\n\t\n\tgl_FragColor = vec4( vec3( sprite(char,cuv) ), 1.0 );\n}", "user": "a8250a4", "parent": null, "id": "28044.1"}