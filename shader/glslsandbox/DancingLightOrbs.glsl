{"code": "/*\n * Original shader from: https://www.shadertoy.com/view/XlBSzd\n */\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// glslsandbox uniforms\nuniform float time;\nuniform vec2 resolution;\n\n// shadertoy globals\nfloat iTime;\nvec3  iResolution;\n\n// --------[ Original ShaderToy begins here ]---------- //\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy,\n        uv = (fragCoord - .5*R) / iResolution.y;\n    \n    vec3 rp = vec3(0.,0.,iTime);\n    vec3 rd = normalize(vec3(uv,1.));\n    \n    vec3 c = vec3(0.);\n    float s = 0.;\n    \n    for (int i = 0; i < 74; i++) {\n        vec3 hp = rp+rd*s;\n        float d = length(cos(hp*.6+\n                             cos(hp*.3+iTime*.5)))-.2;\n        float cc = clamp(1.-(d*.5+(d*5.)/s),-1.,1.);\n        \n        c += (cos(vec3(hp.xy,s))*.5+.5 + cos(vec3(s+iTime,hp.yx)*.1)*.5+.5 + 1.)/3.\n              *cc*.02;\n        \n        s += d;\n        rd = normalize(rd+vec3(d*.01,d*-.006,0.));\n    }\n    \n    fragColor = vec4(c,1.);\n}\n// --------[ Original ShaderToy ends here ]---------- //\n\nvoid main(void)\n{\n  iTime = time;\n  iResolution = vec3(resolution, 0.0);\n\n  mainImage(gl_FragColor, gl_FragCoord.xy);\n  gl_FragColor.a = 1.0;\n}", "user": "c15437", "parent": null, "id": "46557.0"}