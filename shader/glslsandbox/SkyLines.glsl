{"code": "//--- skyline ---\n// by Catzpaw 2016\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n//#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n//hash\nfloat hash(vec2 p){return fract(sin(p.x*733.7+p.y*63.6)*5.5);}\nvec2 hash2(vec2 p){return vec2(hash(p*484.4),hash(373.3*p.yx+22.2))-.5;}\n\n//2d perlin noise\nvec2 acc=vec2(1,0);\nvec2 noise2(vec2 v){vec2 p=floor(v);vec2 f=fract(v);f=f*f*(3.0-2.0*f);\n\tvec2 n=mix(mix(hash2(p),hash2(p+acc.xy),f.x),mix(hash2(p+acc.yx),hash2(p+acc.xx),f.x),f.y);\n\treturn n;}\nvec2 pnoise(vec2 v){vec2 n=vec2(0);float s=1.0;\n\tfor(int i=0;i<6;i++){n+=abs(noise2(v)+.5 )*s;v*=2.;s*=.5;}\n\treturn n;}\n\n//buildings\nvec3 rect(vec2 p,vec2 s,vec2 e){\n\tfloat r=0.5+abs(sin(hash(e)*100.+time*1.5));\n\tif(e.y>.1&&length(p-vec2(e.x,e.y))<=0.004)return vec3(r,0,0);\n\tif(e.y>.1&&length(p-vec2(s.x,e.y))<=0.004)return vec3(r,0,0);\n\tif(p.x<min(s.x,e.x)||p.x>max(s.x,e.x))return vec3(-1);\n\tif(p.y<min(s.y,e.y)||p.y>max(s.y,e.y))return vec3(-1);\n\tif(p.x<e.x-.006&&p.x>s.x+.006&&p.y<e.y-.006&&sin(p.y*400.+e.y*12.)>0.6&&hash(p)<.7)return vec3(.5,.4,.4);\n\treturn vec3(0);}\nvec3 rects(vec2 p,float w,float h,float d){p.x=mod(p.x,d);\n\treturn rect(p,vec2(0.,0.),vec2(w,h));}\n\n//main\nvoid main()\n{\n\tvec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y); \n\tfloat lines=200.0;\n\t//uv.x=floor(uv.x*lines)/lines;\n\t//uv.y=floor(uv.y*lines)/lines;\n\tvec3 finalColor=vec3(0);\n\tfloat c = 0.;\n\n\tfloat waterline=0.1;\n\tfloat wind=time/8.0;\n\n\tuv.y+=waterline;\n\n\t//water\n\tif(uv.y<0.){\n\t\tuv.y+=sin(hash(uv))*.01+sin(uv.x*7.+50./uv.y+time*3.)*.06+sin(-uv.x*7.+70./uv.y+time*3.)*.06;\n\t}\n\t\n\t//sky\n\tfinalColor=mix(vec3(0.8,0.4,0.6),vec3(0.1,0.3,0.5),floor(abs(uv.y*8.)+sin(uv.y*lines*2.)*.4)/8.);\n\tfinalColor+=floor(abs(1.-clamp(abs(uv.y)*3.,0.,1.))*4.)/8.;\n\n\t//star\n\tc=hash2(uv).x;\n\tif(c>0.495&&uv.y>0.)finalColor+=floor(abs(uv.y)*clamp(length(uv+vec2(0.3,-0.6))*.6,0.,1.)*5.)*.2;\n\t\n\t//moon\n\tfloat l=length(vec2(uv.x,abs(uv.y))+vec2(0.3,-0.6));\n\tc=floor(max(fract(smoothstep(l,0.1,0.099)),fract(smoothstep(l,0.5,0.35))*.5)*7.)*.1;\n\tfinalColor+=c*vec3(.8,.9,.9);\n\t\n\t//cloud\n\tfloat dist=4.-log2(pow(abs(uv.y),1.0))*2.0;\n\tvec2 p=vec2(uv.x*dist*.4+wind,abs(uv.y)*dist*5.);\n\tvec2 n=pnoise(p);\n\tc = floor((2.1-n.x-n.y)*abs(uv.y*7.));\n\tfinalColor+= clamp(c,0.,.5)*vec3(0.6,0.8,0.9);\n\n\t//skyline\n\tvec3 color=vec3(-1);\n\tcolor=max(color,rects(uv+vec2(0.1,0),0.07,0.21,0.33));\n\tcolor=max(color,rects(uv+vec2(0.2,0),0.08,0.19,0.38));\n\tcolor=max(color,rects(uv+vec2(-.2,0),0.05,0.10,0.26));\n\tcolor=max(color,rects(uv+vec2(0.3,0),0.05,0.11,0.23));\n\tcolor=max(color,rects(uv+vec2(0.5,0),0.07,0.13,0.27));\n\tcolor=max(color,rects(uv+vec2(-.1,0),0.18,0.05,0.31));\n\tcolor=max(color,rects(uv+vec2(0.0,0),0.21,0.02,0.20));\n\tif(color.b>=0.)finalColor=color;\n\n\t//street\n\tif(abs(uv.y)<.01&&hash(uv)<.2)finalColor=vec3(.6,.6,.5);\n\tif(abs(uv.y)<.005&&hash(vec2(floor(time*3.),uv.x*100.))<.2)finalColor=vec3(sin(uv.x*50.+time),.5,.5);\n\t\n\tgl_FragColor = vec4(finalColor, 1.0);\n}\n", "user": "cc897d1", "parent": "/e#36198.1", "id": "36234.0"}