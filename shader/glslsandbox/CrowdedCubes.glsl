{"code": "// crowded cubes\n// by FabriceNeyret2\n// Adapted from https://www.shadertoy.com/view/MlSSRy by J.\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n\n#define T time\n#define r(v,t) v *= mat2( C = cos((t)*T), S = sin((t)*T), -S, C )\n\nvoid main(void) {\n    float C,S,r,x;\n    vec4 p = vec4(gl_FragCoord.xy,0,1)/resolution.yyxy-.5, d; p.x-=.4; // init ray \n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);   // camera rotations\n    d = p;                                 // ray dir = ray0-vec3(0)\n    p.z += 5.*T;\n    gl_FragColor = vec4(0.);\n    for (float i=1.; i>0.; i-=.01)  \n    {\n        vec4 u = floor(p/8.), t = mod(p, 8.)-4., M; // objects id + local frame\n        r(t.xy,u.x); r(t.xz,u.y); r(t.yz,1.);    // objects rotations\n   \n        t = abs(t); M=max(t,t.yzxw);\n        r = 1.2-cos(.2*T); \n        x = max(t.x,M.y)-r;\n        if (sin(.1*T)>0.) x = max(x,(r-.1)-min(M.x,min(M.y,M.z)));\n        if(x<.01)  // hit !\n            { gl_FragColor = i*i*(1.+.2*t); break; } // color texture + black fog \n\n        p -= d*x;           // march ray\n    }\n    gl_FragColor.a = 1.;\n}", "user": "c2a90dd", "parent": null, "id": "28181.1"}