{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat sdFloor(vec3 p, vec3 b) {\n  return length(max(abs(p)-b,0.0));\n}\n\nfloat sdCylinder( vec3 p, vec3 c )\n{\n  return length(p.xz-c.xy)-c.z;\n}\n\nvoid main()\n{\n\n\n\tvec2 coords = gl_FragCoord.xy / resolution;\n\t#define time time*0.1 + pow(coords.y, 1.-sin(coords.x+time))\n\tvec3 ray_dir = normalize( vec3( coords.x-sin(time*0.5)*0.1, coords.y - 0.5, -1.0 +sin(time*0.5)*0.1) );\n\tvec3 ray_orig = vec3((time*0.05)*cos(time*0.05)*20.0,5.0,100.0);\n\tfloat offs = 0.0;\n\tfloat j;\n\tfor( float i = 0.0; i < 500.0;i += 1.0 ) {\n\t\tvec3 pos = vec3(ray_orig+ray_dir*offs);\n\t\t\t\n\t\tvec3 c = vec3(100.0,100.0,100.0);\n\t\tvec3 q = mod(pos,c)-0.5*c;\n\t\t\n\t\tfloat dist = sdCylinder(q, vec3(0.0,0.0,5.0));\n\t\t\n\t\tdist = min(dist, sdFloor(q, vec3(50.0,1.0,50.0)));\n\t\t\n\t\toffs+=dist;\n\t        j = i+(i*sin(time))/50.;\n\t\tif(abs(dist)<0.0001) break;\n\t\t\n\t}\n\t\n\tfloat c=j/50.0;\n\tgl_FragColor=vec4(c*(0.2+vec3(cos(time*0.1 - time*0.2),sin(time*0.2 - time*0.45),sin(time*0.3 - time*0.117))), 8.0);\n\t\n}", "user": "5518e9b", "parent": "/e#19689.0", "id": "19885.0"}