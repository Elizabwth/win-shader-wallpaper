{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define PI 3.1415926535\n\nstruct Ray {\n\tvec3 pos;\n\tvec3 dir;\n};\n\t\nfloat udRoundBox( vec3 p, vec3 b, float r )\n{\n\treturn length(max(abs(p)-b,0.0))-r;\n}\n\nvec3 repPos( vec3 p, vec3 c )\n{\n    return mod(p,c)-0.5*c;\n}\n\n\nfloat subFunc(vec3 pos)\n{\n\tfloat a = mod(atan(pos.y, pos.x), PI / 1.5) - PI / 1.5 / 2.0;\n\tfloat xyLen = length(pos.xy);\n\ta -= pos.z;\n\tpos.xy = vec2(xyLen * sin(a), xyLen * cos(a));\n\tpos = repPos(pos, vec3(0.03));\n\treturn udRoundBox(pos, vec3(0.0138), 0.001);\n}\n\nfloat func(vec3 pos)\n{\n\tfloat a = mod(atan(pos.y, pos.x), PI / 1.5) - PI / 1.5 / 2.0;\n\tfloat xyLen = length(pos.xy);\n\ta += pos.z;\n\tpos.xy = vec2(xyLen * sin(a), xyLen * cos(a));\n\tpos = repPos(pos, vec3(0.33));\n\treturn udRoundBox(pos, vec3(0.1), 0.01);\n}\n\nfloat distFunc(vec3 pos)\n{\n\t\n\treturn max(-subFunc(pos), func(pos));\n\t//return subFunc(pos);\n}\n\nvec3 getNormal(vec3 pos)\n{\n\tconst float d = 0.0001;\n\treturn normalize(\n\t\tvec3(\n\t\t\tdistFunc(pos + vec3(d, 0, 0)) - distFunc(pos - vec3(d, 0, 0)),\n\t\t\tdistFunc(pos + vec3(0, d, 0)) - distFunc(pos - vec3(0, d, 0)),\n\t\t\tdistFunc(pos + vec3(0, 0, d)) - distFunc(pos - vec3(0, 0, d))\n\t\t)\n\t);\n}\n\nvec3 rayMarching(vec2 pos) {\n\tvec3 cameraPos = vec3(0.0, 0.0, -10.0 + time * 0.2);\n\tRay ray;\n\tray.pos = cameraPos;\n\tray.dir = normalize(vec3(pos * 2.0, 1.0));\n\tfloat d;\n\tfor(int i = 0; i < 64; ++i)\n\t{\n\t\td = distFunc(ray.pos);\n\t\tray.pos += d * ray.dir;\n\t\tif (abs(d) < 0.001) break;\n\t}\n\t\n\tfloat light = (dot(getNormal(ray.pos), vec3(1, 1, -1)));\n\treturn clamp(vec3(1.0, 0.7, 0.4) * light + (ray.pos - cameraPos).z * 0.5, 0.0, 1.0);\n}\n\nvoid main( void ) {\n\n\tvec2 pos1 = (gl_FragCoord.xy + vec2(0.0, 0.0) - resolution * 0.5)  / resolution.y + mouse - 0.5;\n\tvec2 pos2 = (gl_FragCoord.xy + vec2(0.0, 0.5) - resolution * 0.5)  / resolution.y + mouse - 0.5;\n\tvec2 pos3 = (gl_FragCoord.xy + vec2(0.5, 0.0) - resolution * 0.5)  / resolution.y + mouse - 0.5;\n\tvec2 pos4 = (gl_FragCoord.xy + vec2(0.5, 0.5) - resolution * 0.5)  / resolution.y + mouse - 0.5;\n\tgl_FragColor = vec4(vec3(rayMarching(pos1)), 1.0);\n\treturn;\n\tgl_FragColor = \n\t\tvec4(\n\t\t\t(rayMarching(pos1) + \n\t\t\trayMarching(pos2) + \n\t\t\trayMarching(pos3) + \n\t\t\trayMarching(pos4)) / 4.0\n\t\t, 1.0);\n}", "user": "c968950", "parent": null, "id": "27678.0"}