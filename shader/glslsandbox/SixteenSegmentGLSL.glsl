{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n//16 segment display\n\nfloat dseg(vec2 p0,vec2 p1,vec2 uv)\n{\n\tvec2 dir = normalize(p1 - p0);\n\tuv = (uv - p0) * mat2(dir.x, dir.y,-dir.y, dir.x);\n\treturn distance(uv, clamp(uv, vec2(0), vec2(distance(p0, p1), 0)));   \n}\n\nbool bit(float n, float b)\n{\n\treturn mod(floor(n / exp2(floor(b))), 2.0) != 0.0;\n}\n\nfloat ddigit(float bits, vec2 uv)\n{\n\tfloat d = 1e6;\t\n\n\tfloat n = floor(bits);\n\t\n\tif(bits != 0.0)\n\t{\n\t\td = bit(n,  0.0) ? min(d, dseg(vec2( 0.500,  0.063), vec2( 0.500,  0.937), uv)) : d;\n\t\td = bit(n,  1.0) ? min(d, dseg(vec2( 0.438,  1.000), vec2( 0.063,  1.000), uv)) : d;\n\t\td = bit(n,  2.0) ? min(d, dseg(vec2(-0.063,  1.000), vec2(-0.438,  1.000), uv)) : d;\n\t\td = bit(n,  3.0) ? min(d, dseg(vec2(-0.500,  0.937), vec2(-0.500,  0.062), uv)) : d;\n\t\td = bit(n,  4.0) ? min(d, dseg(vec2(-0.500, -0.063), vec2(-0.500, -0.938), uv)) : d;\n\t\td = bit(n,  5.0) ? min(d, dseg(vec2(-0.438, -1.000), vec2(-0.063, -1.000), uv)) : d;\n\t\td = bit(n,  6.0) ? min(d, dseg(vec2( 0.063, -1.000), vec2( 0.438, -1.000), uv)) : d;\n\t\td = bit(n,  7.0) ? min(d, dseg(vec2( 0.500, -0.938), vec2( 0.500, -0.063), uv)) : d;\n\t\td = bit(n,  8.0) ? min(d, dseg(vec2( 0.063,  0.000), vec2( 0.438, -0.000), uv)) : d;\n\t\td = bit(n,  9.0) ? min(d, dseg(vec2( 0.063,  0.063), vec2( 0.438,  0.938), uv)) : d;\n\t\td = bit(n, 10.0) ? min(d, dseg(vec2( 0.000,  0.063), vec2( 0.000,  0.937), uv)) : d;\n\t\td = bit(n, 11.0) ? min(d, dseg(vec2(-0.063,  0.063), vec2(-0.438,  0.938), uv)) : d;\n\t\td = bit(n, 12.0) ? min(d, dseg(vec2(-0.438,  0.000), vec2(-0.063, -0.000), uv)) : d;\n\t\td = bit(n, 13.0) ? min(d, dseg(vec2(-0.063, -0.063), vec2(-0.438, -0.938), uv)) : d;\n\t\td = bit(n, 14.0) ? min(d, dseg(vec2( 0.000, -0.938), vec2( 0.000, -0.063), uv)) : d;\n\t\td = bit(n, 15.0) ? min(d, dseg(vec2( 0.063, -0.063), vec2( 0.438, -0.938), uv)) : d;\n\t}\n\t\n\treturn d;\n}\n\n/*\nSegment bit positions:\n\n  __2__ __1__\n |\\    |    /|\n | \\   |   / |\n 3  11 10 9  0\n |   \\ | /   |\n |    \\|/    |\n  _12__ __8__\n |           |\n |    /|\\    |\n 4   / | \\   7\n | 13 14  15 |\n | /   |   \\ |\n  __5__|__6__\n\n15                 0\n |                 |\n 0000 0000 0000 0000\n\nexample: letter A\n\n   12    8 7  4 3210\n    |    | |  | ||||\n 0001 0001 1001 1111\n\n binary to hex -> 0x119F\n \n float c_a = float(0x119F)\n*/\n\nfloat c_a = float(0x119F);\nfloat c_b = float(0x927E);\nfloat c_c = float(0x007E);\nfloat c_d = float(0x44E7);\nfloat c_e = float(0x107E);\nfloat c_f = float(0x101E);\nfloat c_g = float(0x807E);\nfloat c_h = float(0x1199);\nfloat c_i = float(0x4466);\nfloat c_j = float(0x4436);\nfloat c_k = float(0x9218);\nfloat c_l = float(0x0078);\nfloat c_m = float(0x0A99);\nfloat c_n = float(0x8899);\nfloat c_o = float(0x00FF);\nfloat c_p = float(0x111F);\nfloat c_q = float(0x80FF);\nfloat c_r = float(0x911F);\nfloat c_s = float(0x8866);\nfloat c_t = float(0x4406);\nfloat c_u = float(0x00F9);\nfloat c_v = float(0x2218);\nfloat c_w = float(0xA099);\nfloat c_x = float(0xAA00);\nfloat c_y = float(0x4A00);\nfloat c_z = float(0x2266);\n\nconst int NUM_CHARS = 12;\n\nvoid main( void ) \n{\n\tvec2 aspect = resolution.xy / resolution.y;\n\tvec2 uv = ( gl_FragCoord.xy / resolution.y );\n\tuv -= aspect / 2.0;\n\tuv *= 8.0;\n\t\n\tfloat dist = 1e6;\n\t\n\t//Glitch fade-in animation\n\tfloat anim_time = clamp(time * 0.25, 0.0, 1.0) * 16.0;\n\t\n\tfloat ch[NUM_CHARS];\n\t\n\tch[ 0] = mix(0.0, c_g, clamp(anim_time - 0.0, 0.0, 1.0));\n\tch[ 1] = mix(0.0, c_l, clamp(anim_time - 1.0, 0.0, 1.0));\n\tch[ 2] = mix(0.0, c_s, clamp(anim_time - 2.0, 0.0, 1.0));\n\tch[ 3] = mix(0.0, c_l, clamp(anim_time - 3.0, 0.0, 1.0));\n\tch[ 4] = 0.0;\n\tch[ 5] = mix(0.0, c_s, clamp(anim_time - 4.0, 0.0, 1.0));\n\tch[ 6] = mix(0.0, c_a, clamp(anim_time - 5.0, 0.0, 1.0));\n\tch[ 7] = mix(0.0, c_n, clamp(anim_time - 6.0, 0.0, 1.0));\n\tch[ 8] = mix(0.0, c_d, clamp(anim_time - 7.0, 0.0, 1.0));\n\tch[ 9] = mix(0.0, c_b, clamp(anim_time - 8.0, 0.0, 1.0));\n\tch[10] = mix(0.0, c_o, clamp(anim_time - 9.0, 0.0, 1.0));\n\tch[11] = mix(0.0, c_x, clamp(anim_time -10.0, 0.0, 1.0));\n\t\n\t//Printing and spacing\n\tvec2 ch_size = vec2(1.0, 2.0);\n\tvec2 ch_space = ch_size + vec2(0.25,0.25);\n\t\n\tvec2 offs = vec2(-ch_space.x * 5.5,0.0);\n\t\n\tfor(int i = 0;i < NUM_CHARS;i++)\n\t{\n\t\tdist = min(dist, ddigit(ch[i] , uv - offs)); \n\t\toffs.x += ch_space.x;\n\t}\n\t\n\t//Shading\n\tvec3 color = vec3(0.0);\n\t\n\tcolor = mix(vec3(2.0,0.8,0.1), vec3(0.0,0.0,0.0), smoothstep(0.01, 0.05, dist) - (0.01 / dist));\n\t\n\tgl_FragColor = vec4(color, 1.0);\n\n}", "user": "a8250a4", "parent": null, "id": "27154.13"}