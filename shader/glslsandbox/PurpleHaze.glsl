{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2      resolution;\nuniform float     time;\nuniform float     alpha;\nuniform vec2      speed;\nuniform float     shift;\n\nfloat rand(vec2 n) \n{\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) \n{\n\tconst vec2 d = vec2(0.0, 1.0);\n\n\tvec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) \n{\n\tfloat total = 0.0, amplitude = 1.0;\n\t\n\tfor (int i = 0; i < 4; i++) {\n\t\ttotal += noise(n) * amplitude;\n\t\tn += n;\n\t\tamplitude *= .5;\n\t}\n\t\n\treturn total;\n}\n\nvoid main() \n{\n\tconst vec3 c1 = vec3(126.0/255.0, 0.0/255.0, 97.0/255.0);\n\tconst vec3 c2 = vec3(173.0/255.0, 0.0/255.0, 161.4/255.0);\n\tconst vec3 c3 = vec3(0.2, 0.0, 0.0);\n\tconst vec3 c4 = vec3(164.0/255.0, 1.0/255.0, 214.4/255.0);\n\tconst vec3 c5 = vec3(0.1);\n\tconst vec3 c6 = vec3(0.9);\n\n\tvec2 p = gl_FragCoord.xy * 8.0 / resolution.xx;\n\n\tfloat q = fbm(p - time * 0.1);\n\n\tvec2 r = vec2(fbm(p + q + time * speed.x - p.x - p.y), fbm(p + q - time * speed.y));\n\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n\t\n\tfloat grad = gl_FragCoord.y / resolution.y;\n\t\n\tgl_FragColor = vec4(c * cos(shift * gl_FragCoord.y / resolution.y), 1.0);\n\tgl_FragColor.xyz *= 1.0-grad;\n}", "user": "2c867f0", "parent": null, "id": "22085.0"}