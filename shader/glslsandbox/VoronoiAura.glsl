{"code": "// VoronoiAura by Ethan Alexander Shulman 2015-7-25  https://twitter.com/EthanShulman\n// This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n// http://creativecommons.org/licenses/by-nc-sa/4.0/\n// a variation by I.G.P.\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat voronoi(in vec2 uv) \n{\n    vec2 lp = abs(uv)*10.;\n    vec2 sp = fract(lp)-.5;\n    lp = floor(lp);\n    \n    float d = 1.;\n    for (int x = -1; x < 2; x++)\n    {\n        for (int y = -1; y < 2; y++)\n        {\n            vec2 mp = vec2(float(x),float(y));\n            vec2 p = lp+mp;\n            \n            d = min(d,length(sp+(cos(p.x+time)+cos(p.y+time))*.3-mp));\n        }\n    }\n    return 0.1 * d / pow(length(uv),1.5);\n}\n\nvoid main( void )\n{\n    vec2 uv = 2. * (gl_FragCoord.xy / resolution.xy - vec2(.5));\n    uv.y *= resolution.y / resolution.x;\n    \n    float ang = atan(uv.y, uv.x);\n    float dst = length(uv);\n    float cfade = clamp(dst*40.-3.+cos(ang*1.+cos(ang*6.)*1.+time*2.)*.68,0.,1.);\n    \n    float a = 0.;\n    for (int i = 3; i < 7; i++) \n    {\n        float fi = float(i);\n        vec2 luv = uv+cos((ang-dst)*fi+time+uv+fi)*.3;\n    \ta += voronoi(luv)*(.7+(cos(luv.x*14.234)+cos(luv.y*16.234))*.4);\n    }\n    vec3 color = vec3(0.86, .6 ,0.139);\n    gl_FragColor = vec4(color*a*cfade,1.);\n}\n", "user": "c1069fd", "parent": null, "id": "26784.0"}