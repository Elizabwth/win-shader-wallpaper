{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform float time;\n\n\nvec3 trans(vec3 p)\n{\n\t//return mod(p, 2.0)-1.0;\n\tvec3 moddata = vec3(mod(p.x, 4.0)-2.0,mod(p.y, 4.0)-2.0,mod(p.z, 4.0)-2.0)*1.0;\n\treturn moddata;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat lengthN(vec3 v, float n)\n{\n\tvec3 tmp = pow(abs(v), vec3(n));\n\treturn pow(tmp.x+tmp.y+tmp.z, 1.0/n);\n}\n\nfloat distanceFunction(vec3 pos)\n{\n\treturn sdBox(trans(pos),vec3(0.3));\n}\n \nvoid main() {\n\tvec2 pos = (gl_FragCoord.xy*2.0 -resolution) / resolution.y;\n\t\n\tvec3 camPos = vec3(0.1, 10.0, 4.0);\n\tvec3 camDir = vec3(0.4, sin(time)*0.01, -1.0);\n\tcamPos -= vec3(time*-15.0,0.5,time * 0.0);\n\tvec3 camUp = vec3(((mod(time/10.,15.0))), 1.0, 1.0);\n\tvec3 camSide = cross(camDir, camUp);\n\tfloat focus = 1.0;\n\t\n\tvec3 rayDir = normalize(camSide*pos.x + camUp*pos.y + camDir*focus);\t    \n    vec3 ray = camPos;\n    int march = 0;\n    float d = 0.0;\n\n    float total_d = 0.0;\n    const int MAX_MARCH = 24;\n    const float MAX_DIST = 100.0;\n    for(int mi=0; mi<MAX_MARCH; ++mi) {\n        d = distanceFunction(ray);\n        march=mi;\n        total_d += d;\n        ray += rayDir * d;\n        if(d<0.001) {break; }\n        if(total_d>MAX_DIST) {\n            total_d = MAX_DIST;\n            march = MAX_MARCH-1;\n            break;\n        }\n    }\n\t\n    float fog = min(1.0, (1.0 / float(MAX_MARCH)) * float(march))*0.6;\n    vec3  fog2 = 0.013 * vec3(1, 1, 1.5) * total_d;\n    gl_FragColor = vec4(vec3(clamp(sin(time/2.),0.,0.5), clamp(cos(time/4.),0.,0.5), 0.2)*fog + fog2, 1.0);\n\t\n}", "user": "62eb3d9", "parent": "/e#10575.0", "id": "10779.0"}