{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat noise2d(vec2 p) {\n\treturn fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 456367.5453);\n}\n\nvec4 sample(int x, int y)\n{\n\tvec2 p = ( (gl_FragCoord.xy + vec2(x, y)) / resolution.xy );\n\t\n\tfloat a = 0.0;\n\tfor (int i = 1; i < 20; i++) {\n\t\tfloat fi = float(i);\n\t\tfloat s = floor(200.0*(p.x)/fi + 50.0*fi + time / 5.);\n\t\t\n\t\tif (p.y < noise2d(vec2(s))*fi/35.0 - fi*.05 + 1.0 + 0.125*cos(time / 5. + float(i)/5.0 + p.x*5.0)) {\n\t\t\ta = float(i)/20.;\n\t\t}\n\t}\n\n\treturn vec4(vec3(a*p.x, a*p.y, a * (1. - p.x) ), 1.0 );\n}\n\n#define EDGE_THRESHOLD 1e-2\n\nbool edge()\n{\n\tvec4 mid = sample(0, 0);\n\treturn distance(mid, sample(0, 1)) > EDGE_THRESHOLD || distance(mid, sample(1, 0)) > EDGE_THRESHOLD;\n}\n\nvoid main( void )\n{\n\tgl_FragColor = edge() ? vec4(0.0, 0.0, 0.0, 1.0) : sample(0, 0);\n}", "user": "686e41f", "parent": "/e#23213.0", "id": "23312.2"}