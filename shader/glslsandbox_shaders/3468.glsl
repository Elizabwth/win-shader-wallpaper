{"code": "//@ME\n//Maschendrahtzaun\n\n#ifdef GL_ES\nprecision lowp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform vec2 reyboard;\n\nconst float PI = 3.1415926535;\nconst float TWOPI = PI*2.0;\n\nvec2 rotate(vec2 point, float rads) {\n\tfloat cs = cos(rads);\n\tfloat sn = sin(rads);\n\treturn point * mat2(cs, -sn, sn, cs);\n}\n\nfloat unsin(float t)\n{\n\treturn sin(t)*0.5+0.5;\n}\n\nfloat curve( float x)\n{\n\treturn smoothstep( 0.0, 3., unsin(x*TWOPI) + cos(x*PI) ) - unsin(x*TWOPI);\n}\n\nfloat thing(vec2 pos) \n{\n\tfloat offset = 0.;\n\tfloat row = floor((pos.y-1.)/2.);\n\tif (mod(row, 2.0) <= 1.0)\n\t\toffset = curve(unsin(pos.x)*sin(time));\n\tfloat a = curve(pos.x + curve(unsin(pos.y)*sin(-time)));\n\tfloat b = curve(pos.y - offset);\n\tfloat c = distance(a, b);\n\treturn a + b + c;\n}\n\nvoid main(void) \n{\n\tvec2 position = ( gl_FragCoord.xy / resolution );\n\tvec2 world = position * 14.0 - 7.;\n\tworld.x *= resolution.x / resolution.y;\n\tworld = rotate(world, radians(45.));\n\tfloat dist = 2.0*thing(world);\n\n\tgl_FragColor = vec4( dist, dist, dist, 1.0 );\n}\n", "user": "5733c9b", "parent": null, "id": "3468.2"}