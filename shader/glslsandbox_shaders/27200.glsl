{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat random(vec2 v) \n{\nreturn fract(sin(dot(v ,vec2(3.9898,78.233))) * (10000.0+time*0.05));\n}\n\nvoid main( void ) \n{\n\tconst int numColors = 3;\n\tvec3 colors[numColors];\n\tcolors[0] = vec3( 0.3, 0.8, 0.8);\n\tcolors[1] = vec3( 0.8, 0.9, 0.4);\n\tcolors[2] = vec3( 0.4, 0.4, 0.5);\n\t\n\tvec2 screenPos = gl_FragCoord.xy;\n\tvec2 screenPosNorm = gl_FragCoord.xy / resolution.xy;\n\tvec2 position = screenPosNorm + mouse / 4.0;\n\t\n\t// calc block\n\tvec2 screenBlock0 = floor(screenPos*0.16 + vec2(time,0) + time*2.0);\n\tvec2 screenBlock1 = floor(screenPos*0.08 + vec2(time*1.5,0) + time*4.0);\n\tvec2 screenBlock2 = floor(screenPos*0.02 + vec2(time*2.0,0)+time*2.0);\n\tfloat rand0 = random(screenBlock0);\n\tfloat rand1 = random(screenBlock1);\n\tfloat rand2 = random(screenBlock2);\n\t\n\tfloat rand = rand1;\n\tif ( rand2 < 0.05 ) { rand = rand2; }\n\t\n\t// block color\n\tvec3 color = mix( colors[0], colors[1], pow(rand,5.0) );\n\tif ( rand < 0.05 ) { color=colors[2]; }\n\t\n\tfloat vignette = 1.6-length(screenPosNorm*2.0-1.0);\n\tvec4 finalColor = vec4(color*vignette, 1.0);\n\t\n\tgl_FragColor = finalColor;\n}", "user": "dd64964", "parent": "/e#5812.0", "id": "27200.0"}