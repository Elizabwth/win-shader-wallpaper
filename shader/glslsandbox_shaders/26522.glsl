{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\nuniform vec2 resolution;\nuniform float time;\n\n//  Function from I\u00f1igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution;\n    vec3 color = vec3(0.0);\n\n    float bwidth = 0.0000000003;\n    float left = step(bwidth, st.x);\n    float bottom = step(bwidth, st.y);\n    float top = step(bwidth, 1.0 - st.y);\n    float right = step(bwidth, 1.0 - st.x);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5) - st;\n    float angle = atan(toCenter.y, toCenter.x);\n    float radius = length(toCenter) * 10.0;\n  \n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(left * bottom * top * right * vec3((sin(angle)/TWO_PI/2.0) + 0.5 * sin(time) * 2.0, radius, 10.0));\n\n    gl_FragColor = vec4(color,1.0);\n}", "user": "99f9e1f", "parent": "/e#26508.3", "id": "26522.0"}