{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nvarying vec2 surfacePosition;\n\n// these seem popular nowdays let's try it with a twist --jz\n\n// how many curly fries do we need?\n#define MAX_ITER 16\n\nvoid main( void ) {\n\n\tvec2 p = surfacePosition;\n\tvec2 i = p;\n\n\tfloat c = 0.0;\n\n\tfloat d = length(i);\n\tfloat r = atan(i.x, i.y);\n\tfor (int n = 0; n < MAX_ITER; n++) {\n\t\ti = i + vec2( \n\t\t\t\t1.0/float((n+1) * MAX_ITER/(n+1)) * d * sin(r * i.y * (pow(float(n), 2.0 - abs(sin(time * 0.022))) * float(MAX_ITER)/float(n+1)) + time * 1.49),\n\t\t\t\t1.0/float((n+1) * MAX_ITER/(n+1)) * d * cos(r * i.x * (pow(float(n), 2.0 - abs(cos(time * 0.021))) * float(MAX_ITER)/float(n+1)) + time * 1.51)\n\t\t\t);\n\t\t\n\t\td = length(i);\n\t        r = atan(i.x, i.y);\n\t}\n\t\n\tc = (1.0-d);\n\tc = pow(c, 2.2);\n\tgl_FragColor = vec4( vec3( c*abs(sin(i.x + 2.0)), c*abs(sin(i.y + 4.0)), c*abs(sin(i.x+i.y + 4.0))) * vec3(1.01,1.15,1.5), 1.0 );\n}", "user": "bdc7abd", "parent": null, "id": "13449.2"}