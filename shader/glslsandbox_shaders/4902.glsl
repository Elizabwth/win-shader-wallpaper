{"code": "/* Normal Map Stuff */\n/* By: Flyguy */\n/* With help from http://stackoverflow.com/q/5281261 */\n\n// fancified a bit by psonice\n\n// slimified a bit by kabuto\n \n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.141592 \n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nuniform vec2 surfaceSize;\nvarying vec2 surfacePosition;\n\nfloat heightmap(vec2 position)\n{\n\tfloat height = 0.0;\n\tfloat f = .002;\n\tvec2 timevec = time*vec2(.1,.13);\n\tfloat g = sqrt(1.25)+.5;\n\tposition *= f;\n\tfloat c = cos(2.*PI*g);\n\tfloat s = sin(2.*PI*g);\n\tmat2 matcs = mat2(c,s,-s,c)*g;\n\tfor (int i = 0; i < 13; i++) {\n\t\tvec2 v = fract(position + timevec)-.5;\n\t\tfloat dots = max(0.,.13-dot(v,v));\n\t\tdots = dots*dots*dots/f*8.;\n\t\theight += dots*dots*2.;//max(height,dots);\n\t\tf *= g;\n\t\tposition *= matcs;\n\t}\n\t\n\treturn sqrt(height);\n}\n\t\nfloat n1,n2,n3,n4;\nvec2 size = vec2(-0.4,0.0);\nvoid main( void ) {\n\n\tvec2 pos = gl_FragCoord.xy;\n\n\tn1 = heightmap(vec2(pos.x,pos.y-1.0));\n\tn2 = heightmap(vec2(pos.x-1.0,pos.y));\n\tn3 = heightmap(vec2(pos.x+1.0,pos.y));\n\tn4 = heightmap(vec2(pos.x,pos.y+1.0));\n\t\n\tvec3 p2m = vec3(-((pos/resolution)-mouse)*resolution,resolution.x*.2);\t\n\t\n\tvec3 normal = normalize(vec3(n2-n3, n1-n4, 0.4));\n\t\n\tfloat color = dot(normal, normalize(p2m))*1.;\n\tvec3 colorvec = vec3(pow(color,6.),pow(color,5.),pow(color,2.9));\n\t\n\tfloat brightness = 1./sqrt(1.+pow(distance(mouse*resolution,pos)/resolution.x*8.,2.));\n\t\n\tgl_FragColor = vec4( colorvec + brightness*vec3(1.1, 0.9, 0.7) - 1.0 + vec3(0.0, 0.1, 0.2), 1.0 );\n\n}", "user": "fcd093", "parent": "/e#4900.0", "id": "4902.1"}