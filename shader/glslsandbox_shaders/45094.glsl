{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat plasma(vec2 p, float iso, float fade)\n{\n\tfloat c = 0.0;\n\tfor (float i=1.0; i<10.0; ++i) {\n\t\tfloat f1 = i / 0.6;\n\t\tfloat f2 = i / 0.3;\n\t\tfloat f3 = i / 0.7;\n\t\tfloat f4 = i / 0.5;\n\t\tfloat s1 = i / 2.0;\n\t\tfloat s2 = i / 4.0;\n\t\tfloat s3 = i / 3.0;\n\t\tc += sin(p.x * f1 + time) * s1 + sin(p.y * f2 + 0.5 * time) * s2 + sin(p.x * f3 + p.y * f4 - 1.5 * time) * s3;\n\t}\n\t//c = mod(clamp(c, -1.0, 1.0), 0.5) * 2.0;\n\tc = mod(c, 16.0) * 0.5 - 7.0;\n\tif (c < iso) {\n\t\treturn 0.0;\n\t}\n\telse {\n\t\tif (c > 0.5) c = 1.0 - c;\n\t\tc *= 2.0;\n\t\treturn c * fade;\n\t}\n}\n\nvoid main( void ) {\n\n\tvec2 pos = (( gl_FragCoord.xy / resolution.xy ) - vec2(0.5)) * vec2(resolution.x / resolution.y, 1.0);\n\n\tfloat c = 0.0;\n\tfor (float i=0.0; i<27.0; ++i)\n\t{\n\t\tfloat zoom = 1.0 + i * i + sin(time * 0.2) * 0.3;\n\t\tvec2 trans = vec2(sin(time * 0.3) * 0.5, sin(time * 0.4) * 0.2);\n\t\tc = plasma(pos * zoom + trans, 0.0, 2.0 / (1.0 + i));\n\t\tif (c> 0.001) break;\n\t}\n\tgl_FragColor = vec4(c * pos.x, c * pos.y, c * abs(pos.x + pos.y), 0.5) * 2.0;\n\n}", "user": "ad5ff64", "parent": "/e#45069.2", "id": "45094.1"}