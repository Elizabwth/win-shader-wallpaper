{"code": "// Energy Field\n// By: Brandon Fogerty\n// bfogerty at gmail dot com \n// xdpixel.com\n// Special thanks to Inigo Quilez for noise!\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 resolution;\nuniform vec2 mouse;\n\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\n\n// Slight modification of iq's noise function.\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    float n = p.x + p.y*157.0;\n    return mix(\n                    mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                    mix( hash(n+157.0), hash(n+158.0),f.x),\n            f.y);\n}\n\n\nfloat fbm(vec2 p, vec3 a)\n{\n     float v = 0.0;\n     v += noise(p*a.x)*.5;\n     v += noise(p*a.y)*.25;\n     v += noise(p*a.z)*.125;\n     return v;\n}\n\nvec3 drawLines( vec2 uv, vec3 fbmOffset, vec3 color1, vec3 color2 )\n{\n    float timeVal = time * 0.1;\n    vec3 finalColor = vec3( 0.0 );\n    for( int i=0; i < 3; ++i )\n    {\n        float indexAsFloat = float(i);\n        float amp = 40.0 + (indexAsFloat*5.0);\n        float period = 2.0 + (indexAsFloat+2.0);\n        float thickness = mix( 0.9, 1.0, noise(uv*10.0) );\n        float t = abs( 0.9 / (sin(uv.x + fbm( uv + timeVal * period, fbmOffset )) * amp) * thickness );\n        \n        finalColor +=  t * color1;\n    }\n    \n    for( int i=0; i < 5; ++i )\n    {\n        float indexAsFloat = float(i);\n        float amp = 40.0 + (indexAsFloat*7.0);\n        float period = 2.0 + (indexAsFloat+8.0);\n        float thickness = mix( 0.7, 1.0, noise(uv*10.0) );\n        float t = abs( 0.8 / (sin(uv.x + fbm( uv + timeVal * period, fbmOffset )) * amp) * thickness );\n        \n        finalColor +=  t * color2 * 0.6;\n    }\n    \n    return finalColor;\n}\n\nvoid main( void ) \n{\n\n    vec2 uv = ( gl_FragCoord.xy / resolution.xy ) * 2.0 - 1.0;\n    uv.x *= resolution.x/resolution.y;\n    uv.xy = uv.yx;\n\n    vec3 lineColor1 = vec3( 0.3, 0.5, .5 );\n    vec3 lineColor2 = vec3( 0.3, 0.5, 2.5 );\n    \n    vec3 finalColor = vec3(0.0);\n\n    \n    float t = sin( time ) * 0.5 + 0.5;\n    float pulse = mix( 0.10, 0.20, t);\n    \n    finalColor += drawLines( uv, vec3( 1.0, 20.0, 30.0), lineColor1, lineColor2 ) * pulse;\n    finalColor += drawLines( uv, vec3( 1.0, 2.0, 4.0), lineColor1, lineColor2 );\n\t\nif ((mouse.x  * 2. - 1.) * resolution.x/resolution.y > uv.y) {\n\tfinalColor.rgb = finalColor.bgr;\n}\n    \n    gl_FragColor = vec4( finalColor, 1.0 );\n\n}", "user": "36c9eae", "parent": "/e#25448.3", "id": "26018.0"}