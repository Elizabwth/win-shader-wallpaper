{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat f(vec2 p, vec2 centre, float mult)\n{\n    float radius = 0.09;\n    \n    float power = 0.5 + 3.5 * mult;\n    power = clamp(power, 0.0, 4.0);\n    vec3 a = vec3(p, radius);\n    vec3 b = vec3(centre, 0.0);\n    return dot(pow(abs(a-b), vec3(power)), vec3(1.0, 1.0, -1.0));\n}\n\nvec2 grad(in vec2 x, in vec2 centre, in float mult)\n{\n    vec2 h = vec2( 0.01, 0.0 );\n    return vec2( f(x+h.xy, centre, mult) - f(x-h.xy, centre, mult),\n                 f(x+h.yx, centre, mult) - f(x-h.yx, centre, mult) ) / (2.0*h.x);\n}\n\nvoid main()\n{\n\tvec2 uv = gl_FragCoord.xy/resolution.xy;\n    uv = -1.0+2.0*uv;\n\tuv.x *= resolution.x/resolution.y;    \n\n    const float gridSize = 5.0;\n   \n    vec2 grid = vec2(gridSize);\n    vec2 coord = floor(uv * grid) / grid;\n    \n    vec2 c = vec2(1.0/gridSize);\n    vec2 p = mod(uv, c) - c*0.5;\n    \n    vec2 centre = vec2(0,0);\n    \n    float t = sin(abs(coord.x * coord.y) + time*2.0) * 0.5 + 0.5;\n    t *= t;\n    \n    float v = f(p, centre, t);\n    vec2  g = grad(p, centre, t);\n    float de = v / length(g);\n    \n    vec2 mixVal = coord;\n    mixVal*= mixVal;\n    vec3 sCol = vec3(0.2 + mixVal * 0.8, 0.0) + vec3(0,0,1) * (1.0 - dot(abs(coord), vec2(1.0)));\n    \n    float edge = 5.0 / resolution.x;\n    float border = smoothstep(0.0, edge * 2.0, abs(de));\n    sCol *= border;\n\n    vec3 col = vec3(0.3);\n    col = mix( col, sCol, 1.0-smoothstep(0.0, edge, de));\n    \n    gl_FragColor = vec4(col,  1.0); \n}", "user": "8aa0c63", "parent": null, "id": "26712.0"}