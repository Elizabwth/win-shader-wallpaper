{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define ZNEAR 1.0\n#define ZFAR 5.0\n#define PI 3.14159265359\n\nstruct hit {\n\tfloat dist;\n\tvec3 pos;\n\tvec3 normal;\n};\n\nhit sphere(vec3 orig, vec3 dir, vec3 center, float radius) {\n\tfloat a = dot(dir, dir);\n\tfloat b = 2.0 * dot(dir, orig - center);\n\tfloat c = dot(orig - center, orig - center) - radius * radius;\n\t\n\tfloat d = b * b - 4.0 * a * c;\n\t\n\thit h;\n\th.dist = -1.0;\n\t\n\tif (d < 0.0) { return h; }\n\t\n\tfloat dist = (-b - sqrt(d)) / (2.0 * a);\n\t\n\tif (dist < 0.0) { return h; }\n\t\n\th.dist = dist;\n\th.pos = orig + dir * dist;\n\th.normal = (center - h.pos) / radius;\n\treturn h;\n}\n\nvoid main(void) {\n\tvec2 position = gl_FragCoord.xy / resolution;\n\t\n\tposition -= 0.5;\n\tposition.x /= resolution.y / resolution.x;\n\t\n\tvec3 orig = vec3(position, 0.0);\n\tvec3 dir = normalize(orig - vec3(0.0, 0.0, -ZNEAR));\n\t\n\thit h;\n\th.dist = -1.0;\n\t\n\tvec3 lightPos = vec3(sin(time * 0.5) * 2.0, 0.0, 2.0);\n\t\n\tfloat mind = -1.0;\n\tfor (int i = 0; i < 128; i++) {\n\t\tfloat a = 2.0 * PI / 32.0 * float(i) + time * 0.3;\n\t\tvec3 xz = vec3(0.0, cos(a), sin(a));\n\t\thit sh = sphere(orig, dir, vec3(float(i) / 32.0 - 2.0, 0.0, 2.0) + xz / (abs(float(i) / 32.0 - 2.0 - lightPos.x) + 1.3), 0.15);\n\t\tif (sh.dist >= 0.0 && (mind == -1.0 || sh.dist < mind)) {\n\t\t\th = sh;\n\t\t\tmind = sh.dist;\n\t\t}\n\t}\n\t\n\tvec3 lightDir = normalize(h.pos - lightPos);\n\t\n\n\tvec3 color = vec3(0.0);\n\t\n\tif (h.dist >= 0.0) {\n\t\tvec3 eyeDir = -dir;\n\t\t\n\t\tfloat isqr = 5.0 / (4.0 * PI * pow(distance(h.pos, lightPos), 2.0));\n\t\t\n\t\tfloat ambient = 0.5;\n\t\t\n\t\tfloat diffuse = max(dot(lightDir, h.normal), 0.0);\n\t\t\n\t\tfloat specular = 0.5 * pow(max(dot(reflect(lightDir, h.normal), eyeDir), 0.0), 10.0);\n\t\n\t\tfloat radiance = min(max(ambient, diffuse) * isqr, 1.0);\n\t\tfloat highlight = min(specular * isqr, 1.0);\n\t\t\n\t\tcolor = mix(vec3(0.0, 0.4, 0.7) * radiance, vec3(1.0), highlight);\n\t}\n\t\n\tfloat lightProj = dot(dir, orig - lightPos);\n\t\n\tif (h.dist < 0.0 || -lightProj < h.dist) {\n\t\tfloat lightDist = length((orig - lightPos) - lightProj * dir);\n\t\tgl_FragColor = vec4(mix(color, vec3(1.0), pow(lightDist, -4.0) / 2000.0), 1.0);\n\t}\n\telse {\n\t\tgl_FragColor = vec4(color, 1.0);\n\t}\n}", "user": "4601551", "parent": "/e#7113.1", "id": "7155.1"}