{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n// Fake DOF spheres by Kabuto\n// Move mouse vertically to control focal plane\n\nvoid main( void ) {\n\n\tvec3 pos = vec3(0,0,-10);\n\tvec3 dir = normalize(vec3((gl_FragCoord.xy - resolution.xy*.5) / resolution.x, 1.));\n\n\tvec3 color = vec3(0.,.15,.64);\n\tfor (float y = 6.; y >= -6.; y--) {\n\t\tfor (float x = -5.; x <= 5.; x++) {\n\t\t\t// \n\t\t\tvec3 s = vec3(x+sin(time+y*.7),sin(time+x*.5+y*.5),y+sin(time-x*.7));\n\t\t\tfloat t = dot(s-pos,dir);\n\t\t\tvec3 diff = (pos+t*dir-s)*3.;\n\t\t\tfloat dist = length(diff);\n\t\t\t// fake depth of field\n\t\t\tfloat dof = abs(1./(pos.z-s.z)+1./(5.+10.*mouse.y))*4.;\n\t\t\tfloat dofdist = (length(diff)-1.)/dof;\n\t\t\tdofdist = max(-1.,min(1.,dofdist));\n\t\t\tdofdist = sign(dofdist)*(1.-pow(1.-abs(dofdist),1.5));\n\t\t\tfloat invalpha = dofdist*.5+.5;\n\t\t\tvec3 normal = normalize(pos+t*dir-vec3(-(mouse.x-.5)*.5*(5.+10.*mouse.y),-5.,-5.+10.*mouse.y));\n\t\t\t\n\t\t\tfloat color1 = dot(normalize(diff+vec3(0,0,1.)),normal)*.5+.5;\n\t\t\tcolor1 = pow(color1,2.);\n\t\t\tcolor = color*invalpha + color1*(1.-invalpha);\n\t\t}\n\t}\n\t\n\t\n\t\n\tgl_FragColor = vec4(sqrt(color), 1.0 );\n\n}", "user": "6c1fed1", "parent": "/e#3796.6", "id": "3814.0"}