{"code": "// vector field\n// \n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nvarying vec2 surfacePosition;\n\nfloat pi=atan(1.0)*4.0;\n\n#define CELL_SIZE 16.0\n\nfloat Ex(float x, float y)\n{\n   //return -y/(x*x+y*y);\n\treturn sin(x+y-time/4.0);\n   float xt=x-(mouse.x-0.5)*40.0;\n   float yt=y-(mouse.y-0.5)*40.0;\n   return -y/(x*x+y*y)+((yt))/((xt)*(xt)+(yt)*(yt));\n}\nfloat Ey(float x, float y)\n{\n   //return x/(x*x+y*y);\n\treturn sin(y-x+time/4.0);\n   float xt=x-(mouse.x-0.5)*40.0;\n   float yt=y-(mouse.y-0.5)*40.0;\n   return x/(x*x+y*y)+(-(xt))/((xt)*(xt)+(yt)*(yt));\n   //return sin(y-x+t/4.0);\n}\n\nvoid main(void)\n{\n   float x = gl_FragCoord.x;\n   float y = gl_FragCoord.y;\n\t//float x=surfacePosition.x;\n\t//float y=surfacePosition.y;\n   float w = resolution.x*1.0;\n   float h = resolution.y*1.0;\n\n   float s = CELL_SIZE;\n   float a = ceil(x/s);\n   float b = ceil(y/s);\n   float xd = s*(a-0.5);\n   float yd = s*(b-0.5);\n\n   float m=10.0;\n   float X1 = -m;\n   float X2 = m;\n   float Y1 = -m;\n   float Y2 = m;\n\n   float X = (((X2-X1)/w)*x+X1);\n   float Y = ((((Y2-Y1)/h)*y+Y1)*h/w);\n   float Xd = (((X2-X1)/w)*xd+X1);\n   float Yd = ((((Y2-Y1)/h)*yd+Y1)*h/w);\n   \n   float ex = Ex(Xd,Yd);\n   float ey = Ey(Xd,Yd);\n   float ex2 = Ex(X,Y);\n   float ey2 = Ey(X,Y);\n   float p = ey/ex;\n   float f = (Y-Yd)-p*(X-Xd);\n   float c = atan(ey2,ex2)/pi;\n   if (abs(f)<=0.02) c=1.0;\n\n#if 0\n   gl_FragColor = c;\n#else\n   if (c>=0.0 && c<=0.5)\n   {\n      gl_FragColor = vec4(2.0*c,0.0,0.0,1.0);\n   }\n   if (c>0.5 && c<=1.0)\n   {\n      gl_FragColor = vec4(1.0,c*2.0-1.0,c*2.0-1.0,1.0);\n   }\n   if (c<0.0 && c>=-0.5)\n   {\n      gl_FragColor = vec4(0.0,0.0,abs(c)*2.0,1.0);\n   }\n   if (c<-0.5 && c>-1.0)\n   {\n      gl_FragColor = vec4(abs(c)*2.0-1.0,abs(c)*2.0-1.0,1.0,1.0);\n   }\n#endif   \n}", "user": "3e9f631", "parent": null, "id": "25743.8"}