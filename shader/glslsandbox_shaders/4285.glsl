{"code": "\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nconst float pw = 0.002; // pixel width\nconst float ph = 0.002; // pixel height\nconst float cw = 0.002*8.0; // character width\nconst float ch = 0.002*8.0; // character height\n\nconst float pw0 = pw*0.0; \nconst float pw1 = pw*1.0; \nconst float pw2 = pw*2.0; \nconst float pw3 = pw*3.0; \nconst float pw4 = pw*4.0; \nconst float pw5 = pw*5.0; \nconst float pw6 = pw*6.0; \nconst float pw7 = pw*7.0; \n\nconst float ph0 = ph*0.0; \nconst float ph1 = ph*2.0; \nconst float ph2 = ph*4.0; \nconst float ph3 = ph*6.0; \nconst float ph4 = ph*8.0; \nconst float ph5 = ph*10.0; \nconst float ph6 = ph*12.0; \nconst float ph7 = ph*14.0; \nfloat block(vec2 pos,float x,float y,float w,float h)\n{\n  if (abs(pos.x+x) <= w && abs(pos.y+y) <= h)\n    return 1.0; \n  return 0.0;\n\n}\n\nfloat pixel(int w, vec2 pos)\n{\n  if (abs(pos.x-float(w)*pw*0.5) < pw*0.5*float(w) && abs(pos.y) < ph)\n    return 1.0;\n  return 0.0; \n}\n\n// fix by darkstalker: \"char\" is a reserved word!\nfloat char_(vec2 pos, int p0,int p1,int p2,int p3,int p4,int p5,int p6, int p7)\n{\n  float acc = 0.0;\n\n  if (p0 > 0) acc += pixel(p0,pos-vec2(pw0,0.0));\n  if (p1 > 0) acc += pixel(p1,pos-vec2(pw1,0.0));\n  if (p2 > 0) acc += pixel(p2,pos-vec2(pw2,0.0));\n  if (p3 > 0) acc += pixel(p3,pos-vec2(pw3,0.0));\n  if (p4 > 0) acc += pixel(p4,pos-vec2(pw4,0.0));\n  if (p5 > 0) acc += pixel(p5,pos-vec2(pw5,0.0));\n  if (p6 > 0) acc += pixel(p6,pos-vec2(pw6,0.0));\n  if (p7 > 0) acc += pixel(p7,pos-vec2(pw7,0.0));\n  return acc;\n}\n// Characters have to be \"run length\" encoded to avoid overloading the number of const registers\nfloat charset_A(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_B(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_S(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\n\nfloat charset_I(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_X(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_C(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_O(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph1),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph2),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph3),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph4),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph5),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph6),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph7),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_D(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\n\nfloat charset_M(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,2,0,0,0,0,2,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,3,0,0,0,3,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,7,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,2,0,0,1,0,2,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,0,2,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,0,2,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,0,2,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\n\nfloat charset_R(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_E(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\n\nfloat charset_6(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,5,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_4(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,0,0,3,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,4,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,7,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_2(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,2,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_star(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_K(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,3,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,2,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_Y(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_T(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_3(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,3,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_8(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_9(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,5,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\nfloat charset_1(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,3,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_F(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,6,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,4,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,2,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_V(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,2,0,0,0,2,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,4,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_point(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   0,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   0,0,0,2,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   0,0,0,0,0,0,0,0); \n  return acc; \n}\n\nfloat charset_cursor(in vec4 color, vec2 pos)\n{\n  float acc = 0.0;\n  acc += char_(pos+vec2(0.0, ph*00.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*02.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*04.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*06.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*08.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*10.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*12.0),   8,0,0,0,0,0,0,0); \n  acc += char_(pos+vec2(0.0, ph*14.0),   8,0,0,0,0,0,0,0); \n  return acc; \n}\n\nvoid main( void ) \n{\n    \n    //vec2 position = ( gl_FragCoord.xy / resolution.xy ) + mouse / 4.0;\n    vec2 pos = gl_FragCoord.xy / resolution.xy - vec2(0.5,0.5);  \n    \n    vec4 color = vec4(0,0,1,1); \n    vec4 charcol = vec4(0,0,1,1); \n    \n    // black border\n    color = vec4(0,0,0,1); \n    \n    // C64 screen\n    if (abs(pos.x) < 0.32 && abs(pos.y) < 0.32)\n        color = vec4(0,0,0.5,1);\n    else // border\n        color = vec4(0,0,1.0,1); \n    // black screen\n    if (abs(pos.x) > 0.4 || abs(pos.y) > 0.4) \n            color = vec4(0,0,0,1.0); \n\n    // upper left corner\n    pos.x += pw*8.0*20.0; \n    pos.y -= ph*8.0*18.0; \n    \n    float acc = 0.0; \n    vec2 cursor = pos; \n\n    cursor.x -= cw*4.0; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_C(color, cursor); cursor.x -= cw; \n    acc += charset_O(color, cursor); cursor.x -= cw; \n    acc += charset_M(color, cursor); cursor.x -= cw; \n    acc += charset_M(color, cursor); cursor.x -= cw;  \n    acc += charset_O(color, cursor); cursor.x -= cw; \n    acc += charset_D(color, cursor); cursor.x -= cw; \n    acc += charset_O(color, cursor); cursor.x -= cw; \n    acc += charset_R(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_6(color, cursor); cursor.x -= cw; \n    acc += charset_4(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_B(color, cursor); cursor.x -= cw; \n    acc += charset_A(color, cursor); cursor.x -= cw; \n    acc += charset_S(color, cursor); cursor.x -= cw; \n    acc += charset_I(color, cursor); cursor.x -= cw; \n    acc += charset_C(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_V(color, cursor); cursor.x -= cw; \n    acc += charset_2(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    acc += charset_star(color, cursor); cursor.x -= cw; \n    \n    cursor = pos; \n    cursor.x -= cw*1.0; \n    cursor.y += ch*4.0; \n    acc += charset_6(color, cursor); cursor.x -= cw; \n    acc += charset_4(color, cursor); cursor.x -= cw; \n    acc += charset_K(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_R(color, cursor); cursor.x -= cw; \n    acc += charset_A(color, cursor); cursor.x -= cw; \n    acc += charset_M(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_S(color, cursor); cursor.x -= cw; \n    acc += charset_Y(color, cursor); cursor.x -= cw; \n    acc += charset_S(color, cursor); cursor.x -= cw; \n    acc += charset_T(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    acc += charset_M(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_3(color, cursor); cursor.x -= cw; \n    acc += charset_9(color, cursor); cursor.x -= cw; \n    acc += charset_8(color, cursor); cursor.x -= cw; \n    acc += charset_1(color, cursor); cursor.x -= cw; \n    acc += charset_1(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_B(color, cursor); cursor.x -= cw; \n    acc += charset_A(color, cursor); cursor.x -= cw; \n    acc += charset_S(color, cursor); cursor.x -= cw; \n    acc += charset_I(color, cursor); cursor.x -= cw; \n    acc += charset_C(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_B(color, cursor); cursor.x -= cw; \n    acc += charset_Y(color, cursor); cursor.x -= cw; \n    acc += charset_T(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    acc += charset_S(color, cursor); cursor.x -= cw; \n    cursor.x -= cw; \n    acc += charset_F(color, cursor); cursor.x -= cw; \n    acc += charset_R(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    \n    cursor = pos; \n    cursor.y += ch*8.0; \n    acc += charset_R(color, cursor); cursor.x -= cw; \n    acc += charset_E(color, cursor); cursor.x -= cw; \n    acc += charset_A(color, cursor); cursor.x -= cw; \n    acc += charset_D(color, cursor); cursor.x -= cw; \n    acc += charset_Y(color, cursor); cursor.x -= cw; \n    acc += charset_point(color, cursor); cursor.x -= cw; \n    \n    // Blinking cursor\n    float blink = mod(time, 1.0); \n    cursor = pos; \n    cursor.y += ch*10.0; \n    acc += charset_cursor(color, cursor)*step(blink,0.5); cursor.x -= cw; \n\n    color += charcol*acc; \n    gl_FragColor = color; \n}", "user": "9aa8778", "parent": "/e#4276.0", "id": "4285.0"}