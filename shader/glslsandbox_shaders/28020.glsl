{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n//Signal modulation techniques\n//Input signal (no modulation)\n//AM modulated\n//FM modulated\n//Pulse width modulated\n\nfloat carrier = 48.0;\n\nfloat tau = atan(1.0)*8.0;\n\nvec2 scale = vec2(2, 8);\n\nfloat distline(vec2 p0,vec2 p1,vec2 uv)\n{\n\tvec2 dir = normalize(p1-p0);\n\tuv = (uv-p0) * mat2(dir.x,dir.y,-dir.y,dir.x);\n\treturn distance(uv,clamp(uv,vec2(0),vec2(distance(p0,p1),0)));   \n}\n\nfloat signal(float x)\n{\n\treturn sin(tau*x*3.0 + time);\n}\n\nfloat fm(float carrier, float modulation, float x)\n{\n\tfloat band = 2.0;\n\treturn sin(tau * (x * carrier + modulation * band));\n}\n\nfloat am(float carrier, float modulation, float x)\n{\n\treturn sin(tau * x * carrier) * (modulation * 0.5 + 0.5);\n}\n\nfloat pwm(float carrier, float modulation, float x)\n{\n\treturn step(modulation * 0.5 + 0.5, mod(x * carrier, 1.0));\n}\n\nfloat f(float x, float mode)\n{\n\tfloat sig = signal(x);\n\t\n\tif(mode == 3.0)\n\t{\n\t\treturn sig;\t\n\t}\n\tif(mode == 2.0)\n\t{\n\t\treturn am(carrier, sig,x);\n\t}\n\tif(mode == 1.0)\n\t{\n\t\treturn fm(carrier, sig,x);\n\t}\n\tif(mode == 0.0)\n\t{\n\t\treturn pwm(carrier, sig,x);\n\t}\n\treturn 0.0;\n}\n\nvec4 sample(vec4 sx, float mode)\n{\n\tsx *= scale.x * 0.5;\n\treturn vec4(f(sx.x, mode), f(sx.y, mode), f(sx.z, mode), f(sx.w, mode)) / scale.y * 0.5;\n}\n\nvoid main(void) \n{\n\tfloat rep = 1.0 / (resolution.x / 2.0);\n\tvec2 aspect = resolution.xy / resolution.y;\n\tvec2 uv = ( gl_FragCoord.xy / resolution.y );\n\t\n\tfloat mode = floor(uv.y / 0.25);\n\t\n\tuv.y = mod(uv.y, 0.25);\n\tuv.y -= aspect.y/8.0;\n\t\n\tfloat dist = 1e6;\n\t\n\tvec2 ruv = vec2(mod(uv.x, rep), uv.y);\n\t\n\tvec4 offs = vec4(-1, 0, 1, 2);\n\tvec4 sx = (offs * rep);\n\tvec4 sy = sample((offs + floor(uv.x / rep)) * rep, mode);\n\t\n\tvec2 p0 = vec2(sx.x, sy.x);\n\tvec2 p1 = vec2(sx.y, sy.y);\n\tvec2 p2 = vec2(sx.z, sy.z);\n\tvec2 p3 = vec2(sx.w, sy.w);\n\t\n\tdist = min(dist, distline(p0, p1, ruv));\n\tdist = min(dist, distline(p1, p2, ruv));\n\tdist = min(dist, distline(p2, p3, ruv));\n\t\n\tfloat lw = 1.5 / resolution.y;\n\t\n\tfloat color = smoothstep(lw, 0.0, dist);\n\t\t\n\tgl_FragColor = vec4( vec3( 0, color, 0 ), 1.0 );\n\n}", "user": "a8250a4", "parent": null, "id": "28020.1"}