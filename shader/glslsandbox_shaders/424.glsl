{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Shader Invaders!!\n// Concept & code by Alan Mackey.  Alien graphic by @emackey.\n// Original version is http://glsl.heroku.com/424/12\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\nbool IsUninitialized(vec3 color) {\n\treturn (color == vec3(0.0, 0.0, 0.0));\n}\n\nbool IsEnemy(vec3 color) {\n\treturn ((color.b > color.r) && (color.b > 0.5));\n}\n\nbool IsShot(vec3 color) {\n\treturn ((color.r > color.g) && (color.g == 0.0));\n}\n\nbool IsExplosion(vec3 color) {\n\treturn ((color.r == color.g) && (color.r > 0.77));\n}\n\nbool IsDebris(vec3 color) {\n\tif (IsShot(color)) {return false;}\n\treturn (color.r > 0.2);\n}\n\nbool alien(float x, float y) {\n\tif (x > 5.9999) {\n\t\tx = 11.0 - x;\n\t}\n\n\tif ((x < -0.0001) || (y < -0.0001)) {\n\t\treturn false;\n\t} else if (y <= 1.9999) {\n\t\treturn (x >= (1.9999 - y));\n\t} else if (y <= 3.9999) {\n\t\treturn ((x < 1.9999) || (x >= 3.9999));\n\t} else if (y <= 7.9999) {\n\t\treturn true;\n\t} else if (y <= 10.9999) {\n\t\treturn ((x >= (10.9999 - y)) && (x <= (12.9999 - y)));\n\t}\n\treturn false;\n}\n\nvoid main( void ) {\n\tvec2 position = ( gl_FragCoord.xy / resolution.xy );\n\tvec2 pixel = 1./resolution;\n\tvec2 mousepx = mouse * pixel;\n\n\tvec3 space = vec3(0.02, 0.04, 0.1);\n\tvec3 shot = vec3(1.0, 0.0, 0.3);\n\tvec3 enemy = vec3(0.3, 0.55, 0.65);\n\tvec3 explosion = vec3(0.8, 0.8, 0.2);\n\n\tvec4 old = texture2D(backbuffer, position);\n\tvec4 me = vec4(space.r, space.g, space.b, 1.0);\n\n\t// Y < 0.1: ship\n\tif (position.y < 0.02) {\n\t\t// empty; do nothing\n\t} else if (position.y < 0.1) {\n\t\t// Player ship\n\t\tif (abs(position.x - mouse.x) < (0.1 - position.y) * 0.25) {\n\t\t\tme.rgb = vec3(0.5, 0.7, 0.6);\n\t\t}\n\t} else if (position.y < 0.105) {\n\t\t// Shot generator\n\t\tif ((abs(position.x - mouse.x) <= pixel.x) && (mod(time * 2.0, 1.0) < 0.1)) {\n\t\t\tme.rgb = shot;\n\t\t}\n\t} else {\n\t\t// Playing field\n\t\tfloat shoty = max(position.y - 0.015, 0.1025);\n\t\tvec4 below = texture2D(backbuffer, vec2(position.x, shoty));\n\t\tfloat offset = 0.0;\n\t\tfloat offsetpx = 0.0;\n\n\t\tif (mod(time * 1.0, 1.0) > 0.95) {\n\t\t\t// Enemy marching\n\t\t\toffset = 0.01 * ((old.a > 0.5) ? 1.0 : -1.0);\n\t\t\toffsetpx = 0.01 / pixel.x;\n\t\t\told.rgb = texture2D(backbuffer, position + vec2(offset, 0.0)).rgb;\n\n\t\t\tif (old.a < 0.4) {\n\t\t\t\tme.a = old.a + 0.015;\n\t\t\t} else if (old.a > 0.6) {\n\t\t\t\tme.a = old.a - 0.015;\n\t\t\t} else {\n\t\t\t\t// Change direction!\n\t\t\t\tme.a = (old.a > 0.5) ? 0.0 : 1.0;\n\t\t\t}\n\t\t} else {\n\t\t\tme.a = old.a;\n\t\t}\n\n\t\tif (IsUninitialized(old.rgb)) {\n\t\t\t// draw enemy ships for first time\n\t\t\tfloat enemyrow = (1.0 - position.y - 0.05) * 12.0;\n\t\t\tfloat enemyrowmod = mod(enemyrow, 1.0);\n\t\t\tfloat enemycol = position.x * 15.0 - 0.2;\n\t\t\tfloat enemycolmod = mod(enemycol, 1.0);\n\t\t\tbool oddrow = (floor(mod(enemyrow, 2.0)) == 1.0);\n\n\t\t\tif ((enemyrow >= 0.0) && (enemyrow < 4.0)) {\n\t\t\t\tme.a = (oddrow) ? 1.0 : 0.0;\n\t\t\t\tif ((enemycol >= (oddrow ? 4.0 : 0.0)) && (enemycol < (oddrow ? 15.0 : 11.0))) {\n\t\t\t\t\tme.rgb = alien(enemycolmod * 25.0, enemyrowmod * 25.0) ? enemy : space;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (IsShot(below.rgb)) {\n\t\t\t// Move shot up; look for collision w/ enemy or debris\n\t\t\tif (IsEnemy(old.rgb)) {\n\t\t\t\tme.rgb = explosion;\n\t\t\t} else if (IsDebris(old.rgb)) {\n\t\t\t\tme.rgb = old.rgb;\n\t\t\t} else {\n\t\t\t\tme.rgb = shot;\n\t\t\t}\n\t\t} else if (IsEnemy(old.rgb)) {\n\t\t\t// Grow explosions to consume whole enemy\n\t\t\tbool exploding = \n\t\t\t\t(IsExplosion(texture2D(backbuffer, position + vec2(offsetpx + 1.0, 0.0) * pixel).rgb)) ||\n\t\t\t\t(IsExplosion(texture2D(backbuffer, position + vec2(offsetpx - 1.0, 0.0) * pixel).rgb)) ||\n\t\t\t\t(IsExplosion(texture2D(backbuffer, position + vec2(offsetpx, 1.0) * pixel).rgb)) ||\n\t\t\t\t(IsExplosion(texture2D(backbuffer, position + vec2(offsetpx, -1.0) * pixel).rgb));\n\t\t\tme.rgb = exploding ? explosion : old.rgb;\n\t\t} else {\n\t\t\t// Fade debris to background color\n\t\t\tif (!IsShot(old.rgb) && !IsEnemy(old.rgb)) {\n\t\t\t\tfloat fade = mod(fract(sin(dot(position + time * 0.001, vec2(14.9898,78.233))) * 43758.5453), 1.0);\n\t\t\t\tfade = pow(fade, 6.0) * 0.4;\n\t\t\t\tme.rgb = old.rgb * (1.0 - fade) + space * fade;\n\t\t\t\tif (length(me.rgb - space) < 0.05) {me.rgb = space;}\n\t\t\t}\n\t\t}\n\t}\n\tgl_FragColor = me;\n}", "user": "b2aa83a", "parent": null, "id": "424.12"}