{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define PI 3.14159265359\n//#define time\n\nfloat random(float n) {\n\treturn fract(abs(sin(n * 55.753) * 367.34));\n}\n\nmat2 rotate2d(float angle){\n\treturn mat2(cos(angle), -sin(angle),  sin(angle), cos(angle));\n}\n\nvoid main( void ) {\n\tvec2 uv = (gl_FragCoord.xy * 2.0 -  resolution.xy) / resolution.x;\n\n\tuv *= rotate2d(time * 0.2); //time * 0.2\n\n\tfloat direction = 1.0;\n\tfloat speed = time * direction * 1.6;\n\tfloat distanceFromCenter = length(uv);\n\n\tfloat meteorAngle = atan(uv.y, uv.x) * (180.0 / PI);\n\n\tfloat flooredAngle = floor(meteorAngle);\n\tfloat randomAngle = pow(random(flooredAngle), 0.5);\n\tfloat t = speed + randomAngle;\n\n\tfloat lightsCountOffset = 0.4;\n\tfloat adist = randomAngle / distanceFromCenter * lightsCountOffset;\n\tfloat dist = t + adist;\n\tfloat meteorDirection = (direction < 0.0) ? -1.0 : 0.0;\n\tdist = abs(fract(dist) + meteorDirection);\n\n\tfloat lightLength = 100.0;\n\tfloat meteor = (5.0 / dist) * cos(sin(speed)) / lightLength;\n\tmeteor *= distanceFromCenter * 2.0;\n\n\tvec3 color = vec3(0.);\n\tcolor += meteor;\n\n\tgl_FragColor = vec4(color, 1.0);\n}", "user": "68bde9f", "parent": "/e#42942.0", "id": "44947.0"}