{"code": "// Quasi Infinite Zoom Voronoi\n// by Shane\n// Adapted from https://www.shadertoy.com/view/XlBXWw by J.\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 resolution;\n\nvec2 hash22(vec2 p) { \n    float n = sin(dot(p, vec2(41, 289)));\n    return fract(vec2(262144, 32768)*n); \n}\n\nfloat Voronoi(vec2 p)\n{\t\n    vec2 ip = floor(p);\n    p = fract(p);\n\n    float d = 1.;\n    \n    for (float i = -1.; i < 1.1; i++){\n\t    for (float j = -1.; j < 1.1; j++){\n     \t    vec2 cellRef = vec2(i, j);\n            vec2 offset = hash22(ip + cellRef);\n            vec2 r = cellRef + offset - p; \n            float d2 = dot(r, r);\n            d = min(d, d2);\n        }\n    }\n    \n    return sqrt(d); \n}\n\nvoid main(void){\n    vec2 uv = (gl_FragCoord.xy - resolution.xy*.5)/resolution.y;\n    float t = time, s, a, b, e;\n    float th = sin(time*0.1)*sin(time*0.13)*4.;\n    float cs = cos(th), si = sin(th);\n    uv *= mat2(cs, -si, si, cs);\n    vec3 sp = vec3(uv, 0);\n    vec3 ro = vec3(0, 0, -1);\n    vec3 rd = normalize(ro-sp);\n    vec3 lp = vec3(cos(time)*0.375, sin(time)*0.1, -1.);\n    const float L = 8.;\n    const float gFreq = 0.5;\n    float sum = 0.;\n    th = 3.14159265*0.7071/L;\n    cs = cos(th), si = sin(th);\n    mat2 M = mat2(cs, -si, si, cs);\n    vec3 col = vec3(0);\n    float f=0., fx=0., fy=0.;\n    vec2 eps = vec2(4./resolution.y, 0.);\n    vec2 offs = vec2(0.1);\n    \n    for (float i = 0.; i<L; i++){\n        s = fract((i - t*2.)/L);\n        e = exp2(s*L)*gFreq;\n        a = (1.-cos(s*6.283))/e;\n        f += Voronoi(M*sp.xy*e + offs) * a;\n        fx += Voronoi(M*(sp.xy+eps.xy)*e + offs) * a;\n        fy += Voronoi(M*(sp.xy+eps.yx)*e + offs) * a;\n        sum += a;\n        M *= M;\n    }\n\n    sum = max(sum, 0.001);\n    f /= sum;\n    fx /= sum;\n    fy /= sum;\n    float bumpFactor = 0.2;\n    fx = (fx-f)/eps.x;\n    fy = (fy-f)/eps.x;\n    vec3 n = normalize( vec3(0, 0, -1) - vec3(fx, fy, 0)*bumpFactor );           \n    vec3 ld = lp - sp;\n    float lDist = max(length(ld), 0.001);\n    ld /= lDist;\n    float atten = min(1./(lDist*0.75 + lDist*lDist*0.15), 1.);\n    float diff = max(dot(n, ld), 0.);  \n    diff = pow(diff, 2.)*0.66 + pow(diff, 4.)*0.34; \n    float spec = pow(max(dot( reflect(-ld, n), rd), 0.), 8.); \n    vec3 objCol = vec3(f, f*f*sqrt(f)*0.4, f*0.6);\n    col = (objCol * (diff + 0.5) + vec3(0.5, 0.85, 1.)*spec) * atten;\n    gl_FragColor = vec4(min(col, 1.), 1.);\n}", "user": "f7a3edd", "parent": null, "id": "28179.0"}