{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nfloat hash(vec2 p){\n\tvec3 a = vec3(p.x, p.y, 1.0);\n\tvec3 b = vec3(6.66, 8.888, 8.8);\n\treturn fract(sin(dot(a, b))*8.888);\n}\n\nfloat noise(vec2 p){\n   \tvec2 i = floor(p);\n\tvec2 f = fract(p);\n\tf = smoothstep(0.0, 1.0, f);\n\n\tfloat f00 = hash(i + vec2(0.0, 0.0));\n\tfloat f10 = hash(i + vec2(1.0, 0.0));\n\tfloat f01 = hash(i + vec2(0.0, 1.0));\n\tfloat f11 = hash(i + vec2(1.0, 1.0));\n\tfloat f0010 = mix(f00, f10, f.x);\n\tfloat f0111 = mix(f01, f11, f.x);\n\treturn mix(f0010, f0111, f.y);\n}\n\nfloat octaves(vec2 p){\n\treturn\n\t\tnoise(p*1.0)*0.5 + \n\t\tnoise(p*2.0)*0.25 +\n\t\tnoise(p*4.0)*0.125;\n}\n\nvoid main() {\n\tvec2 pos = gl_FragCoord.xy/resolution;\n\tpos.x *= resolution.x/resolution.y;\n\n\tfloat angle = sin(time*3.0 + 0.8*floor(pos.x*2.0) + 2.8*floor(pos.y*2.0));\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\tmat2 m = mat2(c, -s, s, c);\n\tvec3 color = vec3(0.0);\n\tfloat w = 0.08;\n\tfloat r = 0.6;\n\tfloat d = 9999.0;\n\tvec2 q = pos;\n\tq = fract(q*2.0);\n\tq = q*2.0 - 1.0;\n\tq = m*q;\n\t\n\td = min(d,  abs(length(q)-0.7)-0.05); // circle\n\td = min(d,  max(abs(length(q)-0.35)-0.05, q.y+0.11)); // arc\n\td = min(d,  length(vec2(q.x+0.25, q.y-0.25))-0.04); // dot\n\td = min(d,  length(vec2(q.x-0.25, q.y-0.25))-0.04); // dot\n\tq = vec2(-q.y, q.x);\n\n\tfloat f = smoothstep(0.0, 0.15, d)*octaves((pos + time*vec2(0.0, -0.5))*8.0);\n\tcolor += clamp(f*vec3(5.0, 2.0, 0.0), 0.0, 1.0);\n\n\tgl_FragColor = vec4(color, 1.0);\n}\n", "user": "aeef7d7", "parent": "/e#20677.0", "id": "20682.2"}