{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n// i don't care about your feelings\n#define mouse vec2(0.5+sin(time/2.)/4., 0.5+sin(time)/4.)\n\nconst float VECTOR_SIZE = 24.0;\n\nfloat distLine(vec2 p0,vec2 p1,vec2 uv)\n{\n\tvec2 dir = normalize(p1-p0);\n\tuv = (uv-p0) * mat2(dir.x,dir.y,-dir.y,dir.x);\n\treturn distance(uv,clamp(uv,vec2(0),vec2(distance(p0,p1),0)));   \n}\n\nfloat distVector(vec2 vec, vec2 uv)\n{\n\tvec = normalize(vec);\n\t\n\tfloat dist = 1e6;\n\t\n\tuv -= 0.5;\n\tuv *= mat2(vec.x,vec.y,-vec.y,vec.x);\n\t\n\tdist = min(dist, distLine(vec2( 0.4, 0.0),vec2(-0.4, 0.0),uv));\n\tdist = min(dist, distLine(vec2( 0.4, 0.0),vec2( 0.2, 0.2),uv));\n\tdist = min(dist, distLine(vec2( 0.4, 0.0),vec2( 0.2,-0.2),uv));\n\t\n\treturn dist;\n}\n\nvoid main( void ) \n{\n\tvec2 aspect = vec2(resolution.xy/resolution.y);\n\tvec2 uv = (gl_FragCoord.xy / resolution.y);\n\t\n\tuv.x -= (aspect.x-1.0)/2.0;\n\t\n\tvec2 mo = mouse * aspect;\n\tmo.x -= (aspect.x-1.0)/2.0;\n\t\n\tfloat color = 0.0;\n\t\n\tfloat vectors = floor(resolution.y / VECTOR_SIZE);\n\t\n\tvec2 rep = mod(uv,vec2(1.0/vectors))*vectors;\n\t\n\tvec2 pos = (floor(uv*vectors)+0.5)/vectors;\n\t\n\tcolor = distVector(normalize(mo-pos),rep);\n\t\n\tfloat scale = 1.0/resolution.y * vectors;\n\t\n\tcolor = smoothstep(1.5*scale,0.0,color);\n\t\n\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n}", "user": "e05ab44", "parent": "/e#26683.1", "id": "26694.0"}