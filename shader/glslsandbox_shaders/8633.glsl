{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat triangle(vec2 p, float s)\n{\n\treturn max(abs(p.x) * 0.866025 + p.y * 0.5, -p.y) - s * 0.5;\n}\n\nvec3 hsv(float h,float s,float v) {\n\treturn mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\nfloat line(vec2 p, vec2 v, vec2 w) {\n\tfloat l2 = distance(w, v);\n\tl2 *= l2;\n\tfloat t = dot(p - v, w - v) / l2;\n\tif (t < 0.0) return distance(p, v);\n\telse if (t > 1.0) return distance(p, w);\n\tvec2 projection = v + t * (w - v); \n\treturn distance(p, projection);\n}\n\nfloat distfunc(vec2 p)\n{\n\tp /= 0.1;\n\tfloat d = 1.0;\n\tfloat n = 1.0;\n\tvec2 s = vec2(1.0, -1.0);\n\tfloat S = sin(time/3.14)*cos(time*0.125443);\n\tfloat C = cos(time/3.14)*sin(time*0.195483);\n\tfor (int i = 0; i < 15; i++) {\n\t\td = min(d, triangle(p, 1.0));\n\t\td = min(d, line(p, vec2(-0.866, -0.5), vec2(-0.866, -n*C)));\n\t\td = min(d, line(p, vec2(-0.866, -2.0), vec2(0.866*2.0*n*S, -2.0)));\n\t\tn++;\n\t\tp += s * S;\n\t\tp.xy = vec2(p.x * C - p.y * S, p.y * C + p.x * S) + s;\n\t\ts = -s;\n\t}\n\treturn d;\t\n}\n\nvoid main()\n{\n\n\tvec2 position = -1.0 + 2.0 * ( gl_FragCoord.xy / resolution.xy );\n\tposition.x *= resolution.x / resolution.y;\n\n\tfloat dist = distfunc(position);\n\tgl_FragColor = vec4(sin(dist*32.0+time*16.0)*0.5+0.5);\n\n}", "user": "9b1886a", "parent": null, "id": "8633.0"}