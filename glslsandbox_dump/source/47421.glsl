{"code": "#ifdef GL_ES \nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform vec2 resolution;\nuniform float time;\n\nvec2 iResolution;\nfloat iTime;\n\n#define rotate(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n#define spiral(u, a, r, t, d) abs(sin(t + r * length(u) + a * (d * atan(u.y, u.x))))\n#define sinp(a) .5 + sin(a) * .5\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n    vec2 st = (2. * fragCoord - iResolution.xy) / iResolution.y;\n \tst = rotate(-iTime / 10.) * st;\n\t\n\tvec3 col;\n\tfloat t = iTime;\n    \tvec2 o = vec2(cos(iTime / 10.), sin(iTime / 2.));\n\tfor (int i = 0; i < 3; i++) {\n\t\tt += 0.3 * spiral(vec2(o + st), 16., 16. + 64. * o.x - o.y, -iTime / 100., 1.)\n            * spiral(vec2(o - st), 16., 16. + 64. * o.x - o.y, iTime / 100., -1.);\n\t\tcol[i] = sin(5. * t - length(st) * 10. * sinp(t));\n\t}\n\t\n\tfragColor = vec4(col, 1.0);\n    \n}\n\n\nvoid main() {\n\tiResolution = resolution;\n\tiTime = time;\n\tmainImage(gl_FragColor, gl_FragCoord.xy);\n}", "user": "b2c069", "parent": "/e#47382.3", "id": 47421}