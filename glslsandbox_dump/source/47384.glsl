{"code": "\nprecision mediump float;\n\n//uniform vec4 frag[11];\nuniform sampler2D tex;\n//varying vec2 ftcoord;\n//varying vec2 fpos;\n\nuniform vec2 resolution;\nvarying vec2 surfacePosition;\n#define ftcoord (gl_FragCoord.xy/resolution)\n#define fpos surfacePosition\n\n\n#define scissorMat mat3(vec3(1,0,0), vec3(0,1,0), vec3(0,0,1))\n#define paintMat mat3(vec3(1,0,0), vec3(0,1,0), vec3(0,0,1))\n#define innerCol vec4(1)\n#define outerCol vec4(0)\n#define scissorExt vec2(.9)\n#define scissorScale vec2(1)\n#define extent vec2(1)\n#define radius 0.5\n#define feather 0.05\n#define strokeMult 1.\n#define strokeThr 1.\n#define texType 0\n#define type 0\n\n\nfloat sdroundrect(vec2 pt, vec2 ext, float rad) {\n    vec2 ext2 = ext - vec2(rad,rad);\n    vec2 d = abs(pt) - ext2;\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0)) - rad;\n}\n\n// Scissoring\nfloat scissorMask(vec2 p) {\n    vec2 sc = (abs((scissorMat * vec3(p,1.0)).xy) - scissorExt);\n    sc = vec2(0.5,0.5) - sc * scissorScale;\n    return clamp(sc.x,0.0,1.0) * clamp(sc.y,0.0,1.0);\n}\n\n\nvoid main() {\n    vec4 result;\n    float scissor = scissorMask(fpos);\n\n    float strokeAlpha = 1.0;\n\n    if (type == 0) {                        // Gradient\n               // Calculate gradient color using box gradient\n               vec2 pt = (paintMat * vec3(fpos,1.0)).xy;\n               float d = clamp((sdroundrect(pt, extent, radius) + feather*0.5) / feather, 0.0, 1.0);\n               vec4 color = mix(innerCol,outerCol,d);\n               // Combine alpha\n               color *= strokeAlpha * scissor;\n               result = color;\n    } else if (type == 1) {         // Image\n               // Calculate color fron texture\n               vec2 pt = (paintMat * vec3(fpos,1.0)).xy / extent;\n               vec4 color = texture2D(tex, pt);\n               if (texType == 1) color = vec4(color.xyz*color.w,color.w);\n               if (texType == 2) color = vec4(color.x);\n               // Apply color tint and alpha.\n               color *= innerCol;\n               // Combine alpha\n               color *= strokeAlpha * scissor;\n               result = color;\n    }\n    else if (type == 2) {         // Stencil fill\n               result = vec4(1,1,1,1);\n    } else if (type == 3) {         // Textured tris\n               vec4 color = texture2D(tex, ftcoord);\n               if (texType == 1) color = vec4(color.xyz*color.w,color.w);\n               if (texType == 2) color = vec4(color.x);\n               color *= scissor;\n               result = color * innerCol;\n    }\n    gl_FragColor = result;\n}", "user": "9ab5bae", "parent": "/e#47380.0", "id": 47384}