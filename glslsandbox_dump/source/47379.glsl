{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform vec2 resolution;\nuniform float time;\n\nvec2 iResolution;\nfloat iTime;\n\n#define map(x, a, b, c, d) c + ((v - a) / (b - a)) * (d - c)\n\n#define TWO_PI 6.28318530718\n#define AMOUNT 500.\n#define STEP AMOUNT / 1e5\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 color;\n    float f = 0.;\n    for (float i = 0.; i < AMOUNT; i++) {\n        vec2 p = vec2(\n            cos(2. * iTime + i * STEP * 2.) * .6,\n        \tsin(iTime + i * STEP * 2.) * .6);\n        float ii = (i * i) / 500.;\n        f += 1e-5 / abs(length(uv + p) - i / 50000.) * ii;\n        color = hsv2rgb(vec3(clamp(f /6., 0., 1.), 1., 0.9));\n    }\n    fragColor = vec4(color, 1.);\n}\n\nvoid main() {\n\tiResolution = resolution;\n\tiTime = time;\n\tmainImage(gl_FragColor, gl_FragCoord.xy);\n}", "user": "ed23b80", "parent": null, "id": 47379}