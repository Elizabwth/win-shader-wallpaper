{"code": "// http://glslsandbox.com/e#44284.1\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nmat2 rotate2d(float _angle){\n\treturn mat2(cos(_angle), -sin(_angle),  sin(_angle), cos(_angle));\n}\n\nfloat fade(float x) {\n\treturn x * x * x * (x * (x * 6.0 - 15.0) + 10.0);\n}\n\nfloat phash(float p) {\n\tp = fract(7.8233139 * p);\n\tp = ((2384.2345 * p - 1324.3438) * p + 3884.2243) * p - 4921.2354;\n\treturn fract(p) * 2.0 - 1.0;\n}\n\nfloat cnoise(float p) {\n\tfloat ip = floor(p);\n\tfloat fp = fract(p);\n\tfloat d0 = phash(ip) *  fp;\n\tfloat d1 = phash(ip + 1.0) * (fp - 1.0);\n\treturn mix(d0, d1, fade(fp));\n}\n\nvoid main( void ) {\n\tvec2 uv = (gl_FragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n\n\t//  Backgroud.\n\tfloat noise = cnoise(uv.x / time * .0);\n\tvec3 color = vec3(11.0, 0.0, 245.0) * noise;\n\t\n\t// Rotate.\n\tuv *= rotate2d(time);\n\t\n\t// Main object.\n\tfor (float i = 0.0; i < 10.0; i += 2.0) {\n\t\tfloat circle = smoothstep(0.1, 0.9, 1.0 - length(uv + cnoise(i /15.0)));\n\t\tcolor.r += circle;\n\t\tgl_FragColor = vec4(color, 1.0);\n\t}\n}", "user": "ffa5db2", "parent": "/e#44284.1", "id": 47288}