{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nvoid main( void ) {\n\t// Bereich beschr\u00e4nken zwischen 0 und 1\n\tvec2 pos = gl_FragCoord.xy / resolution.x;\n\t\n\t// Farbverlauf\n\tgl_FragColor = vec4(pos.x, \n\t\t\t    1.-pos.x, \n\t\t\t    sin(time), \n\t\t\t    1.\n\t\t\t   );\n\t\n\t// Objekte nach Mausposition ausrichten\n\t/*pos.x -= mouse.x;\n\tpos.y -= mouse.y;\n\tpos += 0.5;*/\n\t\n\t// Quadrat\n\t/*if( pos.x < 0.6 && pos.x > 0.4 && pos.y > 0.4 && pos.y < 0.6)\n\t{\n\t\tgl_FragColor = vec4(0,\n\t\t\t\t    0,\n\t\t\t\t    0,\n\t\t\t\t1.\n\t\t\t   );\n\t}*/\n\t\n\t// Kreis\n\tconst float tau = 2.0*3.14;\n\tvec2 origin = vec2(0.25*cos(tau*cos(0.793*time))+0.5,\n\t\t\t   0.25*sin(tau*sin(0.1*time))+0.25);\n\t\n\tfloat d = sqrt(pow(pos.x - origin.x, 2.0)+pow(pos.y - origin.y, 2.0));\n\t\n\tif (d > 0.25 * 0.3 * sin(time) + 0.1) // GR\u00f6\u00dfe des Kreises\n\t    {\n\t\t    gl_FragColor = vec4(0.1,\n\t\t\t\t\t0.1,\n\t\t\t\t\t0.1,\n\t\t\t\t\t1\n\t\t\t   );\n\t    }\n}", "user": "7404275", "parent": null, "id": 47452}