{"code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nuniform sampler2D backbuffer;\n\nvec2 pixelSize = 1./resolution;\n\nvec4 bi(vec2 uv){ // bilinear interpolation texture lookup. (would be easier if the backbuffer texture MIN/MAG_FILTER was LINEAR)\n\tvec2 uv_floor = floor(uv*resolution)*pixelSize;\n\tvec2 uv_bi = (uv - uv_floor)*resolution;\n\tvec2 uv_sign = sign(uv_bi-0.5);\n\tuv_bi = abs(uv_bi-0.5)*2.;\n\tvec2 uv0 = uv_floor;\n\tvec2 uv1 = uv0 + vec2(0.,1.)*pixelSize*uv_sign;\n\tvec2 uv2 = uv0 + vec2(1.,0.)*pixelSize*uv_sign;\n\tvec2 uv3 = uv0 + vec2(1.,1.)*pixelSize*uv_sign;\n\t\n\treturn mix( mix( texture2D(backbuffer, uv0), texture2D(backbuffer, uv1), uv_bi.x),\n\t\t    mix( texture2D(backbuffer, uv2), texture2D(backbuffer, uv3), uv_bi.x),\n\t\t    uv_bi.y );\n}\n\nvec4 blurV(vec2 uv){\n\tfloat v = pixelSize.y;\n\tvec4 sum = vec4(0.0);\n\tsum += texture2D(backbuffer, vec2(uv.x, - 4.0*v + uv.y) ) * 0.05;\n\tsum += texture2D(backbuffer, vec2(uv.x, - 3.0*v + uv.y) ) * 0.09;\n\tsum += texture2D(backbuffer, vec2(uv.x, - 2.0*v + uv.y) ) * 0.12;\n\tsum += texture2D(backbuffer, vec2(uv.x, - 1.0*v + uv.y) ) * 0.15;\n\tsum += texture2D(backbuffer, vec2(uv.x, + 0.0*v + uv.y) ) * 0.16;\n\tsum += texture2D(backbuffer, vec2(uv.x, + 1.0*v + uv.y) ) * 0.15;\n\tsum += texture2D(backbuffer, vec2(uv.x, + 2.0*v + uv.y) ) * 0.12;\n\tsum += texture2D(backbuffer, vec2(uv.x, + 3.0*v + uv.y) ) * 0.09;\n\tsum += texture2D(backbuffer, vec2(uv.x, + 4.0*v + uv.y) ) * 0.05;\n\tsum.xyz = sum.xyz/0.98;\n\tsum.a = 1.;\n\treturn sum;\n}\n\nvec4 blurH(vec2 uv){\n\tfloat h = pixelSize.x;\n\tvec4 sum = vec4(0.0);\n\tsum += texture2D(backbuffer, vec2(uv.x - 4.0*h, + uv.y) ) * 0.05;\n\tsum += texture2D(backbuffer, vec2(uv.x - 3.0*h, + uv.y) ) * 0.09;\n\tsum += texture2D(backbuffer, vec2(uv.x - 2.0*h, + uv.y) ) * 0.12;\n\tsum += texture2D(backbuffer, vec2(uv.x - 1.0*h, + uv.y) ) * 0.15;\n\tsum += texture2D(backbuffer, vec2(uv.x + 0.0*h, + uv.y) ) * 0.16;\n\tsum += texture2D(backbuffer, vec2(uv.x + 1.0*h, + uv.y) ) * 0.15;\n\tsum += texture2D(backbuffer, vec2(uv.x + 2.0*h, + uv.y) ) * 0.12;\n\tsum += texture2D(backbuffer, vec2(uv.x + 3.0*h, + uv.y) ) * 0.09;\n\tsum += texture2D(backbuffer, vec2(uv.x + 4.0*h, + uv.y) ) * 0.05;\n\tsum.xyz = sum.xyz/0.98;\n\tsum.a = 1.;\n\treturn sum;\n}\n\nvoid main( void ) {\n\tvec2 uv = gl_FragCoord.xy*pixelSize;\n\tfloat mouse = clamp(1.- length((uv - mouse)*resolution)/4., 0., 1.);\n\tgl_FragColor.g = blurH(uv).r;\n\tgl_FragColor.b = blurV(uv).g;\n\tvec2 d = pixelSize*2.;\n\tvec2 dx;\n\tdx.x = texture2D(backbuffer, uv-vec2(1.,0.)*d).b - texture2D(backbuffer, uv+vec2(1.,0.)*d).b;\n\tdx.y = texture2D(backbuffer, uv-vec2(0.,1.)*d).b - texture2D(backbuffer, uv+vec2(0.,1.)*d).b;\n\tvec2 uvr = uv + dx * d;\n\n\tfloat r = bi(uvr).r;\n\tr += (r - bi(uvr).b)*8./256.;\n\tr += 1.33/256. - mouse*0.015;\n\t\n\tgl_FragColor.r = r;\n//\tgl_FragColor = vec4(  1.0 );\n\n}", "user": "5519f5f", "parent": "/e#1562.0", "id": 47193}