{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nvarying vec2 surfacePosition;\nuniform vec2 surfaceSize;\nuniform sampler2D sampler2d;\n// https://math.stackexchange.com/questions/2654984/identifying-this-chaotic-recurrence-relation\n\nvoid main( void ) {\n\t\n\tgl_FragColor = vec4( 1.0 );\n\t\n\tfloat rho = 3.33/max(resolution.x, resolution.y);\n\t\n\tvec2 xy = (mouse-.5)*7. + vec2(cos(time*12.), sin(time*12.))*rho;\n\tvec2 k = xy;\n\tvec2 sp = 2.5*surfacePosition;\n\t\n\tif(max(abs(sp.x), abs(sp.y)) > 1.){\n\t\tgl_FragColor = vec4(0.5);\t\n\t}\n\t\n\tfor(float i = 0.; i <= 99.; i += 1.){\n\t\tif(max(abs(sp.x-xy.x), abs(sp.y-xy.y)) < rho){\n\t\t\tgl_FragColor = vec4(0.0,0.333,0.5,1.);\n\t\t\tbreak;\n\t\t}\n\t\txy = vec2(sin( k.x * (xy.x+xy.y) ), sin( k.y * (xy.y - xy.x) ));\n\t}\n\t\n\tgl_FragColor = min(texture2D(sampler2d, gl_FragCoord.xy/resolution)+1./256., gl_FragColor);\n\n}", "user": "8dacf50", "parent": "/e#47052.4", "id": 47072}