{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform float time;\nuniform vec2 mouse;\n\nconst int   complexity      = 4;    // More points of color.\nconst float mouse_factor    = 25.0;  // Makes it more/less jumpy.\nconst float mouse_offset    = 5.0;   // Drives complexity in the amount of curls/cuves.  Zero is a single whirlpool.\nconst float fluid_speed     = 45.0;  // Drives speed, higher number will make it slower.\nconst float color_intensity = 0.7;\n\nconst float Pi = 3.14159;\n\nfloat sinApprox(float x) {\n    x = Pi + (2.0 * Pi) * floor(x / (2.0 * Pi)) - x;\n    return (4.0 / Pi) * x - (4.0 / Pi / Pi) * x * abs(x);\n}\n\nfloat cosApprox(float x) {\n    return sinApprox(x + 0.5 * Pi);\n}\n\nvoid main()\n{\n  vec2 p=(2.0*gl_FragCoord.xy-resolution)/max(resolution.x,resolution.y);\n  for(int i=1;i<complexity;i++)\n  {\n    vec2 newp=p;\n    newp.x+=0.6/float(i)*sin(float(i)*p.y+time/fluid_speed+0.3*float(i))+mouse.y/mouse_factor+mouse_offset;\n    newp.y+=0.6/float(i)*sin(float(i)*p.x+time/fluid_speed+0.3*float(i+10))-mouse.x/mouse_factor+mouse_offset;\n    p=newp;\n  }\n  vec3 col=vec3(color_intensity*sin(3.0*p.x)+color_intensity,color_intensity*sin(3.0*p.y)+color_intensity,sin(p.x+p.y));\n  gl_FragColor=vec4(col, 1.0);\n}\n", "user": "3304d67", "parent": "/e#8143.0", "id": 47273}