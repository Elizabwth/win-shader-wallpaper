{"code": "/*\nAuthor: Leon Miura\nE-mail: (myfullname)@gmail.com\nTitle: Pac-man shader\nDate: August 2012\nNote: Comments and variable names in Spanish\n*/\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nvoid main( void ) {\n\n\t//---FRAGMENTO ACTUAL---\n\tvec2 position = gl_FragCoord.xy;\n\t\n\t//---COLOR DE FONDO---\t\n\tgl_FragColor = vec4(0.4,0.8,1.0,1.0);\n\t\n\t\n\t//---PAC-DOTS--- (los puntos que pacman se come)\n\tfloat rpd = 3.0;\t\t//radio de los pac-dots\n\tvec4 colorpd = vec4( 1.0,1.0,1.0, 1.0);\n\tfloat radio_brillo = 5.0;\t//radio del brillo alrededor de los pac-dots\n\tfloat decaimiento;\t\t// o atenuaci\u00f3n del brillo de los pac-dots\n\tconst int NUM_PAC_DOTS = 7;\t//cantidad de pac-dots\n\tvec2 pac_dots_pos[NUM_PAC_DOTS];//array de posiciones de los pac-dots\n\tvec2 posicion_p1;\t\t//posici\u00f3n del primer pac-dot\n\tposicion_p1.x = resolution.x / 4.0;\n\tposicion_p1.y = resolution.y/2.0;\n\tfloat dist_puntos = 80.0;\t//distancia horizontal entre pac-dots consecutivos\n\n\t\n\t//---FANTASMA---\n\tvec2 pos_fantasma;\n\tpos_fantasma.x = resolution.x * 0.75;\n\tpos_fantasma.y = resolution.y/2.0 + sin(time * 1.5) * 100.0;\n\tfloat radio_fantasma = 20.0;\n\tfloat entre_ojos_fantasma = 7.0;\n\tfloat radio_ojos_fantasma = 5.0;\n\tfloat radio_pupilas_fantasma = 2.0;\n\tvec4 color_blanco = vec4(1.0,1.0,1.0,1.0);\n\tvec4 color_fantasma = vec4(1.0,0.0,0.0,1.0);\n\tvec4 color_pupilas_fantasma = vec4(0.0,0.0,1.0,1.0);\n\n\t\n\t//---PISTA---\n\tfloat ancho_calle = 60.0;\n\tfloat ancho_pared = 1.1;\n\tvec4 color_pared = vec4(1.0,1.0,1.0,1.0);\n\tvec4 color_calle = vec4(0.3,0.7,0.1,1.0);\n\tfloat calle_horizontal_y = resolution.y/2.0;\n\tfloat calle_vertical_x   = resolution.x * 0.75;\n\t\n\t\n\t//---PAC-MAN---\n\tvec4 color_pacman = vec4(0.9,0.9,0.0,1.0);\n\tfloat radio_pacman = 20.0;\n\tfloat angulo;\t\t\t//de apertura de la boca\n\tfloat variacion_angulo = 0.30 * sin(time * 12.0) + 0.3;\t//angulo base + oscilaci\u00f3n + apertura adicional\n\tvec2 centro;\t\t\t//de pacman\n\tvec2 horizontal = vec2(1.0,0.0);//vector horizontal (1,0)\n\tint direccion = 0;\t\t//de movimiento de pacman (0: derecha, 1:izquierda)\n\tfloat oscilacion = time * 1.5; \t//de movimiento horizontal\n\n\tcentro.x = resolution.x/2.0 + sin(oscilacion) * 300.0;\t//poner a pacman en el centro horizontal de la pantalla y aplicar oscilaci\u00f3n sinusoidal\n\tcentro.y = resolution.y/2.0;\t\t\t\t//poner a pacman en el centro vertical de la pantalla\n\t\n\tvec2 orientacion = normalize(position - centro);\t//pone la boca hacia la izquierda o derecha\n\n\t\n\t//---DEFINIR DIRECCI\u00d3N DE MOVIMIENTO Y ORIENTACI\u00d3N DE PACMAN---\n\t//la derivada de la coordenada x de pacman nos dice si \u00e9sta va aumentando o disminuyendo\n\t//si aumenta, la direcci\u00f3n es \"derecha\" (0); si disminuye, es \"izquierda\" (1)\n\t//(la derivada de sin(x)) = cos(x)\n\tif(cos(oscilacion) < 0.0)\n\t{\n\t\tdireccion = 1;\n\t}\n\t\n\tif(direccion == 1)\n\t{\n\t\torientacion.xy *= -1.0;\n\t}\n\n\t\t\n\tangulo = acos(dot(horizontal, orientacion));\t//\u00e1ngulo de apertura de la boca\n\n\n\t\n\t//---DIBUJAR CALLES---\n\t//calle horizontal\n\tif((position.y > calle_horizontal_y - ancho_calle/2.0) &&\n\t   (position.y < calle_horizontal_y + ancho_calle/2.0))\n\t{\n\t\tgl_FragColor = color_calle;\n\t}\n\n\t//calle vertical\n\tif((position.x > calle_vertical_x - ancho_calle/2.0 + ancho_pared) && \n\t   (position.x < calle_vertical_x + ancho_calle/2.0))\n\t{\n\t\tgl_FragColor = color_calle;\n\t}\n\n\t\n\t//---DIBUJAR PAREDES---\n\t//paredes horizontales\n\tif(((position.y - ancho_calle/2.0 > calle_horizontal_y && position.y - ancho_calle/2.0  < calle_horizontal_y + ancho_pared) ||\n\t   (position.y + ancho_calle/2.0 > calle_horizontal_y && position.y + ancho_calle/2.0  < calle_horizontal_y + ancho_pared)) &&\n\t   ((position.x < calle_vertical_x - ancho_calle/2.0) || (position.x > calle_vertical_x + ancho_calle/2.0)))\n\t{\n\t\tgl_FragColor = color_pared;\t\n\t}\n\t\n\t//paredes verticales\n\tif(((position.x > calle_vertical_x - ancho_calle/2.0  && position.x < calle_vertical_x - ancho_calle/2.0 + ancho_pared) ||\n\t   (position.x > calle_vertical_x + ancho_calle/2.0  && position.x < calle_vertical_x + ancho_calle/2.0 + ancho_pared)) && \n\t   ((position.y > calle_horizontal_y + ancho_calle/2.0) || (position.y < calle_horizontal_y - ancho_calle/2.0 + ancho_pared)))\n\t{\n\t\tgl_FragColor = color_pared;\t\n\t}\n\t\n\t\n\t\n\t\n\t//---DIBUJAR PAC-MAN---\n\tif((distance(position,centro) < radio_pacman) && angulo > variacion_angulo)\n\t{\n\t\tgl_FragColor = color_pacman;\n\t}\n\n\n\t//DIBUJAR PAC-DOTS\n\tfor(int i = 0; i < NUM_PAC_DOTS; i++)\n\t{\n\t\t//establecer posici\u00f3n del pac-dot i\n\t\tpac_dots_pos[i].x = posicion_p1.x + float(i) * dist_puntos;\n\t\tpac_dots_pos[i].y = resolution.y / 2.0;\n\n\n\t\t//dibujar el pac-dot i\n\t\tif((direccion == 0) && (centro.x < pac_dots_pos[i].x - radio_pacman/2.0) && (distance(position,pac_dots_pos[i]) < rpd + radio_brillo))\n\t\t{\n\t\t\t//dibujar el n\u00facleo del pac-dot i\n\t\t\tif(distance(position,pac_dots_pos[i]) < rpd)\n\t\t\t{\n\t\t\t\tgl_FragColor = colorpd;//vec4( 1.0,1.0,sin(time * 20.0), 1.0);\n\t\t\t}\n\t\t\t\n\t\t\t//dibujar el brillo del pac-dot i\n\t\t\tdecaimiento = exp(distance(position,pac_dots_pos[i])/1.5);\t//decaimiento o atenuaci\u00f3n exponencial del brillo\n\t\t\tgl_FragColor += vec4( 10.0/decaimiento,10.0/decaimiento,sin(time * 20.0)/decaimiento, 10.0/decaimiento);\t\t\n\t\t}\n\t}\n\t\n\n\t//---DIBUJAR EL FANTASMA---\n\t//dibujar el cuerpo del fantasma\n\tif(((distance(position,pos_fantasma) < radio_fantasma) || \n\t   (position.y < pos_fantasma.y && position.x > pos_fantasma.x - radio_fantasma && (position.x < pos_fantasma.x + radio_fantasma))) &&\n\t   (position.y > pos_fantasma.y - radio_fantasma - sin(position.x * 0.75) * 2.0 ))\n\t{\n\t\tgl_FragColor = color_fantasma;\n\t}\n\t\n\t//dibujar en fondo de los ojos del fantasma\n\tvec2 pos_ojo_izq;\n\tpos_ojo_izq.x = pos_fantasma.x - entre_ojos_fantasma;\n\tpos_ojo_izq.y = pos_fantasma.y + 6.0;\n\t\n\tvec2 pos_ojo_der;\n\tpos_ojo_der.x = pos_fantasma.x + entre_ojos_fantasma;\n\tpos_ojo_der.y = pos_fantasma.y + 6.0;\n\t\n\t\n\tif(distance(position,pos_ojo_izq) < radio_ojos_fantasma)\n\t{\n\t\tgl_FragColor = color_blanco;\n\t}\n\t\n\tif(distance(position,pos_ojo_der) < radio_ojos_fantasma)\n\t{\n\t\tgl_FragColor = color_blanco;\n\t}\n\t\n\t//dibujar las pupilas del fantasma\n\tvec2 pos_pup_izq;\n\tpos_pup_izq.x = pos_fantasma.x - entre_ojos_fantasma;\n\tpos_pup_izq.y = pos_fantasma.y + 9.0;\n\t\n\tvec2 pos_pup_der;\n\tpos_pup_der.x = pos_fantasma.x + entre_ojos_fantasma;\n\tpos_pup_der.y = pos_fantasma.y + 9.0;\n\t\n\tif(distance(position,pos_pup_izq) < radio_pupilas_fantasma)\n\t{\n\t\tgl_FragColor = color_pupilas_fantasma;\n\t}\n\t\n\tif(distance(position,pos_pup_der) < radio_pupilas_fantasma)\n\t{\n\t\tgl_FragColor = color_pupilas_fantasma;\n\t}\t\n\t\n\n}", "user": "af01c00", "parent": null, "id": 47297}