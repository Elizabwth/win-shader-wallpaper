{"code": "// http://glslsandbox.com/e#46945.6\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 resolution;\n\nfloat map(float value, float beforeMin, float beforeMax, float afterMin, float afterMax) {\n\treturn afterMin + (afterMax - afterMin) * ((value - beforeMin) / (beforeMax - beforeMin));\n}\n\nfloat random(in vec2 uv){\n\treturn fract(sin(dot(uv, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nmat2 rotate2d(float angle){\n\treturn mat2(cos(angle), -sin(angle),  sin(angle), cos(angle));\n}\n\nfloat circle(vec2 uv, float size) {\n\treturn step(size, length(uv));\n}\n\nfloat rect(vec2 uv, float width, float height) {\n\tvec2 rect = vec2(step(-width, uv.x), step(-height, uv.y)) * vec2((1.0 - step(width, uv.x)), 1.0 - step(height, uv.y));\n\treturn min(rect.x, rect.y);\n}\n\nfloat obliqueLine(vec2 uv){\n\treturn step(0.6, fract((uv.x + uv.y + time * 0.8) * 4.0));\n}\n\nfloat pluralRing(vec2 uv, float interval) {\n\treturn sin(length(uv) * interval);\n}\n\nvoid main( void ) {\n\tvec2 uv = (gl_FragCoord.xy * 2.0 -  resolution) / min(resolution.x, resolution.y);\n\t\n\tfloat num = 30.0;\n\tvec2 scaledUv = uv *num;\n\tvec2 repeatedUv = fract(scaledUv);\n\trepeatedUv -= 0.5;\n\n\tfloat randomOffset = abs(sin(time * 5.0 * random(floor(scaledUv))));\n\tfloat ballRadius = 0.4 * randomOffset;\n\t\n\tfloat point = circle(repeatedUv, ballRadius);\n\tvec2 circleCenterInUv = (floor(scaledUv) + 0.5) / num;  // normalized uv.\n\t\n\tvec3 color = vec3(1.0);\n\tfloat offsetX = 0.7;\n\t\n\t// Word \"I\"\n\tfloat word_I = rect(vec2(circleCenterInUv.x + 0.4 + offsetX, circleCenterInUv.y), 0.1, 0.5);\n\tif (word_I > 0.0) {\n\t\tcolor.r -= rect(vec2(uv.x + 0.4 + offsetX, uv.y), 0.08, 0.48);\n\t\tcolor.gb -= obliqueLine(uv * 2.0) * 0.8;\n\t\tcolor.rg -= (1.0 - point);\n\t}\n\t\n\t// Word \"/\"\n\t/*\n\tfloat word_slash = rect(vec2(circleCenterInUv.x + 0.4 + offsetX, circleCenterInUv.y) * rotate2d(-1.2), 0.6, 0.07);\n\tif (word_slash > 0.0) {\n\t\tcolor.rg -= (1.0 - point);\n\t}\n\t*/\n\t\n\t// Word \"O\"\n\tfloat word_O = 1.0 - circle(vec2(circleCenterInUv.x - 0.33 + offsetX, circleCenterInUv.y), 0.5);\n\tif (word_O > 0.0) {\n\t\tfloat innerCircle1 = 1.0 - circle(vec2(uv.x - 0.33 + offsetX, uv.y), map(cos(time * 8.0), -1.0, 1.0, 0.2, 0.3));\n\t\tcolor.b -= innerCircle1 * 0.5;\n\t\tfloat innerCircle2 = 1.0 - circle(vec2(uv.x - 0.33 + offsetX, uv.y), map(sin(time * 8.0), -1.0, 1.0, 0.4, 0.45));\n\t\tcolor.g -= innerCircle2;\n\t\tcolor.b -= obliqueLine(uv * 3.0) * 0.8;\n\t\tcolor.rg *= point;\n\t}\n\t\n\t// Word \"1\"\n\tfloat word_1 = rect(vec2(circleCenterInUv.x - 1.1 + offsetX, circleCenterInUv.y), 0.1, 0.5);\n\tif (word_1 > 0.0) {\n\t\tcolor.rb -= rect(vec2(uv.x -1.1 + offsetX, uv.y), 0.08, map(sin(time * 5.0), -1.0, 1.0, 0.42, 0.48));\n\t\tcolor.g -= (1.0 - point);\n\t}\n\t\n\t// Word \"8\"\n\tfloat word_8_top = 1.0 - circle(vec2(circleCenterInUv.x - 1.6 + offsetX, circleCenterInUv.y - 0.25), 0.3);\n\tif (word_8_top > 0.0) {\n\t\tfloat innerCircle = 1.0 - circle(vec2(uv.x - 1.6 + offsetX, uv.y - 0.25), 0.15);\n\t\tcolor.g -= innerCircle * 0.8;\n\t\tcolor.rb -= obliqueLine(uv * 6.0 * rotate2d(-1.2)) * 0.6;\n\t\tcolor.rg *= point;\n\t}\n\tfloat word_8_under = 1.0 - circle(vec2(circleCenterInUv.x - 1.6 + offsetX, circleCenterInUv.y + 0.25), 0.3);\n\tif (word_8_under > 0.0) {\n\t\tvec2 v = vec2(uv.x - 1.6 + offsetX, uv.y + 0.25);\n\t\tfloat innerCircle = 1.0 - circle(v, 0.24);\n\t\tcolor.r -= step(0.5, pluralRing(v * 8.0, abs(cos(time * 3.0))));\n\t\tcolor.gb -= innerCircle * 0.8;\n\t\tcolor.rg *= point;\n\t}\n\n\tgl_FragColor = vec4(color, 1.0);\n}", "user": "c2414d", "parent": null, "id": 46945}