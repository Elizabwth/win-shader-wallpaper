{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nconst float pi = 3.14159265358979;\n\nvec2 tile(vec2 uv, float size) {\n\tfloat prop = sin(pi / 3.0);\n\tvec2 ret = uv;\n\tret.x += fract(floor(uv.y / (size  * prop)) * 0.5 * size);\n\tret.x = fract(ret.x / size);\n\tret.y = fract(ret.y / (size  * prop)) * prop + abs(1.0 - prop) / 2.0;\n\treturn ret;\n}\n\nvec2 tileCenter(vec2 uv, float size) {\n\tfloat prop = sin(pi / 3.0);\n\tvec2 ret = uv;\n\tret.x += fract(floor(uv.y / (size  * prop)) * 0.5 * size);\n\tret.x = mod(ret.x, size);\n\tret.y = mod(ret.y, (size  * prop));\n\treturn uv - ret + (size * vec2(1.0,  prop) * 0.5);\n}\n\nvoid main( void ) {\n\t\n\tfloat px = 1.0 / max(resolution.x, resolution.y);\n\tvec2 uv = gl_FragCoord.xy * px;\n\t\n\tfloat theta = time * 0.5;\n\tuv -= resolution * 0.5 * px;\n\tuv *= mat2(sin(theta), -cos(theta), cos(theta), sin(theta));\n\tuv += resolution * 0.5 * px;\n\t\n\tfloat tile_size = 0.05;\n\tfloat circle_size = 0.05;\n\tvec2 tile_uv1 = tile(uv, tile_size);\n\tvec2 tile_uv2 = tileCenter(uv, tile_size);\n\t\n\tfloat mask = smoothstep(circle_size + px * 20.0, circle_size, distance(tile_uv1, vec2(0.5)));\n\t\n\tfloat p = 0.68;\n\n\tvec3 col = vec3(tile_uv2, 0.2).xzy * mask * p + vec3(uv, 0.2).xzy * (1.0 - mask) * (1.0 - p);\n\t\n\tgl_FragColor = vec4( col, 1.0 );\n\n}", "user": "2fc202b", "parent": null, "id": 47319}