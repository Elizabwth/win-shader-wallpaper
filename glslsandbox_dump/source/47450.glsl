{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat f(float x){\n\treturn 0.1;\n}\n\t\nfloat g(float x){\n\treturn 1.73205080757 * x + .01;\n}\n\t\nfloat h(float x){\n\treturn -1.73205080757 * x + .01;\n}\n\nvoid main( void ) {\n\t\n\tvec2 pos = gl_FragCoord.xy / resolution.x;\n\tgl_FragColor = vec4(pos.x, 1.-pos.x, 1., 0);\n\t\n\t//Circle\n\t//if(pos.x < .6 && pos.x > .4 && pos.y > .4 && pos.y < .6){\n\t//\tgl_FragColor = vec4(.2, sin(time) * 0.5 + 0.5, .6, 0.);\n\t//}\n\t\n\tvec2 uk = mouse; //vec2(sin(time) * .1 + .5, cos(time) * .1 + .3);\n\t\n\t/*\n\tfloat dist = sqrt(pow(pos.x - uk.x, 2.0) + pow(pos.y - uk.y, 2.0));\n\t\n\tif(dist < sin(time * 2.) * 0.1 + .2){\n\t\tgl_FragColor.b *= sin(5. * time) * 0.5 + 0.5;\n\t}*/\n\t\n\t//Triangle\n\tif(f(pos.x - uk.x) > pos.y - uk.y &&\n\t   g(pos.x - uk.x) < pos.y - uk.y &&\n\t   h(pos.x - uk.x) < pos.y - uk.y){\n\t\tgl_FragColor = vec4(.2, sin(time) * 0.5 + 0.5, .6, 0.);\n\t}\n}", "user": "43e7cb3", "parent": null, "id": 47450}