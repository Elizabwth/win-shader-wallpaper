{"code": "//by Zanple\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define CHAR_SIZE vec2(6, 7)\n#define CHAR_SPACING vec2(6, 9)\n\n#define DOWN_SCALE 2.0\n\nvec2 res = resolution.xy / DOWN_SCALE;\nvec2 start_pos = vec2(0);\nvec2 print_pos = vec2(0);\nvec2 print_pos_pre_move = vec2(0);\nvec3 text_color = vec3(1);\n\n\n#define HEX(i) text_color = mod(vec3(i / 65536,i / 256,i),vec3(256.0))/255.0;\n#define RGB(r,g,b) text_color = vec3(r,g,b);\n\n#define STRWIDTH(c) (c * CHAR_SPACING.x)\n#define STRHEIGHT(c) (c * CHAR_SPACING.y)\n#define BEGIN_TEXT(x,y) print_pos = floor(vec2(x,y)); start_pos = floor(vec2(x,y));\n\n\n#define _ col+=char(vec2(0.0,0.0),uv);\n#define _exc col+=char(vec2(276705.0,32776.0),uv)*text_color;\n#define _C col+=char(vec2(935172.0,133276.0),uv)*text_color;\n#define _E col+=char(vec2(2048263.0,1181758.0),uv)*text_color;\n#define _F col+=char(vec2(2048263.0,1181728.0),uv)*text_color;\n#define _M col+=char(vec2(1142100.0,665762.0),uv)*text_color;\n#define _O col+=char(vec2(935188.0,665756.0),uv)*text_color;\n#define _P col+=char(vec2(1983767.0,1181728.0),uv)*text_color;\n#define _R col+=char(vec2(1983767.0,1198242.0),uv)*text_color;\n#define _Y col+=char(vec2(1131794.0,1081864.0),uv)*text_color;\n\n\nfloat extract_bit(float n, float b)\n{\n\tb = clamp(b,-1.0,22.0);\n\treturn floor(mod(floor(n / pow(2.0,floor(b))),2.0));   \n}\n\nfloat sprite(vec2 spr, vec2 size, vec2 uv)\n{\n\tuv = floor(uv+50.);\n\tfloat bit = (size.x-uv.x-1.0) + uv.y * size.x;  \n\tbool bounds = all(greaterThanEqual(uv,vec2(0)))&& all(lessThan(uv,size)); \n\treturn bounds ? extract_bit(spr.x, bit - 21.0) + extract_bit(spr.y, bit) : 0.0;\n}\n\nvec3 char(vec2 ch, vec2 uv)\n{\n\tfloat px = sprite(ch, CHAR_SIZE, uv - print_pos);\n\tprint_pos.x += CHAR_SPACING.x;\n\treturn vec3(px);\n}\n\n\nvec3 Text(vec2 uv)\n{\n    \tvec3 col = vec3(0.0);\n    \t\n    \tvec2 center_pos = vec2(res.x/2.0 - STRWIDTH(10.0)/2.0,res.y/2.0 - STRHEIGHT(1.0)/2.0);\n       \t\n    \tBEGIN_TEXT(center_pos.x,center_pos.y)\n\tHEX(0xFFFFF) _ _ _ _ _ _ _ _ _F _O _R _ _M _Y _ _P _E _C _Y _exc\n\t\n\tBEGIN_TEXT(res.x/2.0-STRWIDTH(11.0)/2.0,res.y/2.0)\n\tprint_pos += vec2(cos(time)*96.,sin(time)*96.);\n\t\n    \n    \treturn col;\n}\n\nvoid main( void )\n{\n\tvec2 uv = gl_FragCoord.xy / DOWN_SCALE;\n\tvec2 duv = floor(gl_FragCoord.xy / DOWN_SCALE);\n    \n\tvec3 pixel = Text(duv);\n\n\tvec3 col = pixel*0.9+0.1;\n\tcol *= (1.-distance(mod(uv,vec2(1.0)),vec2(0.65)))*1.2;\n\t\n\n\tgl_FragColor = vec4(vec3(col), 1.);\nvec2 p = (2.0*gl_FragCoord.xy-resolution)/resolution.y;\np -= vec2(0.,0.3);\n\n    float tt = mod(time,2.0)/2.0;\n    float ss = pow(tt,.2)*0.5 + 0.5;\n    ss -= ss*0.2*sin(tt*6.2831*10.0)*exp(-tt*6.0);\n    p *= vec2(0.55,1.5) + ss*vec2(0.5,-0.5);\n\n    \n    float a = atan(p.x,p.y)/3.141593;\n    float r = length(p);\n\n    float h = abs(a);\n    float d = (13.0*h - 22.0*h*h + 10.0*h*h*h)/(6.0-5.0*h);\n\n    float f = step(r,d) * pow(.6-r/d,0.2);\n\tgl_FragColor += vec4(f,0,f/5.,1.0);\n}\n ", "user": "8f825bc", "parent": null, "id": 47066}