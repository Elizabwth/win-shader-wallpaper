{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define dim 28.0\n#define dh dim / 2.0\n#define dhm dh - dim / 10.0\n#define ood 1.0 / dim\n#define mag 1.6 / dim\n\nfloat linearScale(float n, float min1, float max1, float min2, float max2){\n\treturn ((n - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\nbool dir = false;\n\nfloat cl = 0.05;\n\nfloat getVal(float val) {\n\tfloat f = val;\n\tf*=time*.002;\n\tif(f > 0.4) {\n\t\tdir = true;\t\n\t}\n\tif(f < 0.01) {\n\t\tdir = false;\n\t}\n\tfloat diff = val - f;\n\tif(diff < 0.) {\n\t\tdiff = -diff;\n\t}\n\tif(dir == true) {\n\t\treturn val + diff;\n\t}else {\n\t\treturn val + diff;\n\t}\n}\n\nvoid main( void ) {\n\tvec2 p = gl_FragCoord.xy / resolution.xy * dim;\n\tvec3 color = vec3(0.01, 0.01, 0.009);\n\n\tfloat r = p.y * mag + 2.6;\n\tfloat t = 0.01;\n\tfloat xpt = p.x + t;\n\tfloat xmt = p.x - t;\n\t\n\tfor(float b = 0.0; b < 1.0; b += ood){\n\t\tfloat x = b / dim * abs(cos(time / 1000.0+getVal(time*0.002))) * 10.0;\n\t\t\n\t\tfor(float k = 0.0; k < dh; k++){\n\t\t\tx = r * x * (1.0 - x);\n\t\t\t\n\t\t\tif(k > dhm && x > 0.0){\n\t\t\t\tfloat xs = linearScale(x, 0.0, ood, 0.0, 1.0);\n\t\t\t\n\t\t\t\tif(xs < xpt && xs > xmt){\n\t\t\t\t\tfloat cf = getVal(cl);\n\t\t\t\t\tcolor += cf;\n\t\t\t\t\tcl = cf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcolor.xz *= mix(color.xy, p, vec2(0.25));\n\n\tgl_FragColor = vec4(color, 1.0);\n}", "user": "230f877", "parent": "/e#45127.18", "id": 47367}