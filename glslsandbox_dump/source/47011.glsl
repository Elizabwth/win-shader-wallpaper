{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat f(float a, float b) {\n    return sin(10.3 * length((gl_FragCoord.xy / resolution.xy - vec2(.5)) * 2.0 + vec2(cos(a), sin(b))));\n}\n\nvoid main( void ) {\n\n\tvec2 position = ( gl_FragCoord.xy / resolution.xy ) + mouse / 4.0;\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tfloat color = 0.0;\n\t//color += sin( uv.x * cos( time / 15.0 ) * 20.0 ) * cos( uv.x * cos( time / 15.0 ) * 50.0 );\n\t//color += sin( uv.y * sin( time / 10.0 ) * 40.0 ) + cos( uv.x * sin( time / 25.0 ) * 40.0 );\n\t//color += sin( uv.x * sin( time / 5.0 ) * 10.0 ) + sin( uv.y * sin( time / 35.0 ) * 80.0 );\n\t//color *= sin( time / 10.0 ) * 0.5;\n\t//color = sin(50.3 * uv.x * length(color)) + cos(uv.y);\n\t\n\tcolor += sin(0.1 * length((uv + vec2(-0.5)) * time));\n\tcolor -= f(time, time) * f(f(time * 0.2, uv.x), uv.y);\n\t//color += sin(uv.x * 5.0) + cos(uv.y * 5.0) * sin( time / 10.0 ) * 0.5;\n\n\t//gl_FragColor = vec4( vec3( color, color * 0.5, sin( color + time / 3.0 ) * 0.75 ), 1.0 );\n\tgl_FragColor = vec4( vec3(color), 1.0 );\n\n}", "user": "777368c", "parent": null, "id": 47011}