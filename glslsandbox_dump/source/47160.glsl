{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nconst vec3 bgColor = vec3(1.0,0.59,0.4);\nbool inCircle(in vec2 point, in vec2 center, in float r){\n\tvec2 dif = point-center;\n\treturn (dif.x*dif.x) + (dif.y * dif.y) < r*r;\n}\nbool inRect(in vec2 point, in vec2 pos, in vec2 size){\n\treturn point.x>pos.x && point.x<pos.x+size.x &&\n\t       point.y>pos.y && point.y<pos.y+size.y;\n}\nbool inRoundRect(in vec2 point, in vec2 pos, in vec2 size, in float r){\n\treturn inRect(point, pos+vec2(0.,r), size - vec2(0.,2.*r)) ||\n\t       inRect(point, pos+vec2(r,0.), size - vec2(2.*r,0.));\n}\nvoid main( void ) {\n\tfloat maxRadius = max(resolution.x,resolution.y)/4.;\n\t\n\tvec3 color = bgColor;\n\tcolor *= \n\t\tdistance(gl_FragCoord.xy,resolution.xy/2.)<=(maxRadius*mod(time,1.))\n\t\t? (mod(time,1.))\n\t\t: 1.;\n\tgl_FragColor = vec4(color,1.);\n\n}", "user": "1d36b5", "parent": null, "id": 47160}