{"code": "//--- hatsuyuki ---\n// by Catzpaw 2016\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat snow(vec2 uv,float scale)\n{\n\tfloat w=smoothstep(1.,0.1,-uv.y*(scale/10.));\n\tif(w<.1) {\n\t\treturn 0.;\n\t}\n\tuv+=time/scale;\n\tuv.y+=time*2./scale;\n\tuv.x+=sin(uv.y+time*.5)/scale;\n\tuv*=scale;\n\tvec2 s=floor(uv),f=fract(uv),p;\n\tfloat k=3.,d;\n\tp=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(vec2(7,3),vec2(6,5)))*5.))-f;\n\td=length(p);\n\tk=min(d,k);\n\tk=smoothstep(0.,k,sin(f.x+f.y)*0.01);\n    \treturn k*w;\n}\n\nvoid main(void){\n\tvec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y); \n\tvec3 finalColor=vec3(0);\n\tfloat c=smoothstep(1.,0.3,clamp(uv.y*.3+.8,0.,.75));\n\tc = 0.;\n\tc+=snow(uv,30.)*.3;\n\tc+=snow(uv,20.)*.5;\n\tc+=snow(uv,15.)*.8;\n\tc+=snow(uv,8.);\n\tc+=snow(uv,6.);\n\tc+=snow(uv,5.);\n\tfinalColor=(vec3(c));\n\tgl_FragColor = vec4(finalColor,1);\n}\n", "user": "574e187", "parent": "/e#47126.0", "id": 47190}