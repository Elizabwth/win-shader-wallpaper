{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\n#define CNT 5\n#define SIZE 7.\n\nuniform float time;\nuniform vec2 resolution;\n\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 colormap( float x ) {\n\treturn hsb2rgb(vec3(x /2. +.2, .7, .75));\n}\n\nfloat intensity(float diff) {\n\treturn 1. + 5.714286*diff - 38.28571*pow(diff,2.) + 45.71429*pow(diff,3.);\n}\n\n\nvoid main( void ) {\n\n\tfloat me = gl_FragCoord.x / resolution.x;\n\n\t\n\tvec3 color = vec3(0);\n\t\n\tfor(int i = 1; i <= CNT; i++) {\n\t\tfloat pos = mod(time * pow(float(i), .7) * .1, 1.2);\n\t\tif(abs((pos - me) * SIZE) < .5)\n\t\t\tcolor += clamp(intensity((pos - me) * SIZE), 0., 1.)* colormap((float(i)-1.) / float(CNT));\n\t}\n\t\n\tcolor = pow(color, vec3(1));\n\n\tgl_FragColor = vec4( color , 1.0 );\n\n}\n", "user": "ee0f00e", "parent": "/e#47258.0", "id": 47260}