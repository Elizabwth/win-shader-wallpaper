{"code": "/*\n * Original shader from: https://www.shadertoy.com/view/XdcGzH\n */\n\n#extension GL_OES_standard_derivatives : enable\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// glslsandbox uniforms\nuniform float time;\nuniform vec2 resolution;\nuniform vec2 mouse;\n// shadertoy globals\nfloat iTime;\nvec3  iResolution;\nconst float e = 2.71828183;\n// Protect glslsandbox uniform names\n#define time        stemu_time\n#define resolution  stemu_resolution\n\n// --------[ Original ShaderToy begins here ]---------- //\n//Public domain\n#define PI 3.14159\n#define A2B PI/360.\n#define MaxIter 14\nfloat c_abs(vec2 c)\n{\n\treturn sqrt(c.x*c.x + c.y*c.y);\n}\nvec2 c_pol(vec2 c)\n{\n\tfloat a = c.x;\n\tfloat b = c.y;\n\tfloat z = c_abs(c);\n\tfloat f = atan(b, a);\n\treturn vec2(z, f);\n}\nvec2 c_rec(vec2 c)\n{\n\tfloat z = abs(c.x);\n\tfloat f = c.y;\n\tfloat a = z * cos(f);\n\tfloat b = z * sin(f);\n\treturn vec2(a, b);\n}\n\nvec2 c_mul(vec2 c1, vec2 c2)\n{\n\tfloat a = c1.x;\n\tfloat b = c1.y;\n\tfloat c = c2.x;\n\tfloat d = c2.y;\n\treturn vec2(a*c - b*d, b*c + a*d);\n}\n\nvec2 c_pow(vec2 base, vec2 expo)\n{\n\tvec2 b = c_pol(base);\n\tfloat r = b.x;\n\tfloat f = b.y;\n\tfloat c = expo.x;\n\tfloat d = expo.y;\n\tfloat z = pow(r, c) * pow(e, -d * f); \n\tfloat fi = d * log(r) + c * f;\n\tvec2 rpol = vec2(z, fi);\n\treturn c_rec(rpol);\n}\n\nfloat color(vec2 z, vec2 c) {\n\tfloat res = 1.0;\n\tfor (int i=0; i < 50;i++) {\n\t\tfor (int o = 0; o < 1;o++)\n\t\t\tz = c_mul(z,z);\n\t\tz += c;\n\t\tif (length(z) > 4.0) {\n\t\t\tres = float(i)/50.;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (res);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 c = (mouse.xy - vec2(0.5,0.5))*3. + vec2(cos(iTime*0.8),sin(iTime*0.568))*0.01;\n\tfloat scaleFactor=3.0;\n\tvec2 uv = scaleFactor*(fragCoord.xy-0.5*iResolution.xy) / iResolution.x;\n    uv.y+=0.;\n\t\n\tfloat p = color(uv,c);\n\tfragColor = vec4(p, p, p, 1.0);\n}\n// --------[ Original ShaderToy ends here ]---------- //\n\n#undef time\n#undef resolution\n\nvoid main(void)\n{\n  iTime = time;\n  iResolution = vec3(resolution, 0.0);\n\n  mainImage(gl_FragColor, gl_FragCoord.xy);\n}", "user": "f4fd7cb", "parent": "/e#45388.0", "id": 47388}