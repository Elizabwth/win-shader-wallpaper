{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 resolution;\n\nuniform sampler2D bb;\n\n#define chromaShift 0.5\n\nfloat subsubflare(vec2 uv, vec2 point){\n\treturn texture2D(bb, uv).a;\n\tfloat d = distance(uv, point) ;\n\treturn step(d, 0.02) * (0.02-d)/0.02;\n}\n\nmat2 rotmat2d(float angle){\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvec3 subflare(vec2 uv, vec2 point, float px, float py, float pz, float cShift, float i)\n{\n\t\n\tuv-=.5;\n\tfloat x = length(uv);\n\tuv *= pow(4.0*x,py)*px+pz;\n\t\n\tvec3 t=vec3(0.);\n\tt.r = subsubflare(clamp(uv*(1.0+cShift*chromaShift)+0.5, 0.0, 1.0), point);\n\tt.g = subsubflare(clamp(uv+0.5, 0.0, 1.0), point);\n\tt.b = subsubflare(clamp(uv*(1.0-cShift*chromaShift)+0.5, 0.0, 1.0), point);\n\tt = t*t;\n\tt *= clamp(.6-length(uv), 0.0, 1.0);\n\tt *= clamp(length(uv*20.0), 0.0, 1.0);\n\tt *= i;\n\treturn t;\n}\n\nvec3 flare(vec2 point, vec2 uv){\n\tfloat d = distance(uv, point) ;\t\n\tfloat tt = 1.0 / abs( d * 75.0 );\n\tmat2 rm1 = rotmat2d(3.1415 * 0.25);\n\tmat2 rm2 = rotmat2d(3.1415 * 0.75);\n\tfloat v = 1.0 / abs( length((point-uv) * vec2(0.03, 1.0)) * (350.0) );\n\tfloat v2 = 1.0 / abs( length((point-uv) * vec2(1.0, 0.09)) * (1750.0) );\n\tfloat v3 = 1.0 / abs( length((rm1*(point-uv)) * (vec2(1.0, 0.09))) * (1750.0) );\n\tfloat v4 = 1.0 / abs( length((rm2*(point-uv)) * (vec2(1.0, 0.09))) * (1750.0) );\n\t\n\tvec3 finalColor = vec3(subsubflare(uv, point)*0.5);\n\tfinalColor += vec3(tt);\n\tfinalColor += vec3( v );\n\tfinalColor += vec3( v2 );\n\tfinalColor += vec3( v3 );\n\tfinalColor += vec3( v4 );\n\t\n\tfinalColor += subflare(uv, point, 0.00005, 16.0, 0.0, 0.2, 1.0);\n\tfinalColor += subflare(uv, point, 0.5, 2.0, 0.0, 0.1, 1.0);\n\tfinalColor += subflare(uv, point, 20.0, 1.0, 0.0, 0.05, 1.0);\n\tfinalColor += subflare(uv, point, -10.0, 1.0, 0.0, 0.1, 1.0);\n\tfinalColor += subflare(uv, point, -10.0, 2.0, 0.0, 0.05, 2.0);\n\tfinalColor += subflare(uv, point, -1.0, 1.0, 0.0, 0.1, 2.0);\n\tfinalColor += subflare(uv, point, -0.00005, 16.0, 0.0, 0.2, 2.0);\n\treturn finalColor;\n}\n\nuniform vec2 mouse;\n\nvoid main( void ) \n{\n\n\tvec2 UV = gl_FragCoord.xy / resolution.xy;\n\tvec2 ratio = vec2(1.0);\n\t\t\n\tfloat d = distance(UV, mouse) ;\t\n\tgl_FragColor = vec4( flare(((mouse * 2.0 - 1.0) * ratio) * 0.5 + 0.5, (UV * 2.0 - 1.0) * ratio * 0.5 + 0.5), 1.0 / abs( d * 75.0 ) );\n\n}", "user": "3c6cb4c", "parent": "/e#47299.0", "id": 47409}