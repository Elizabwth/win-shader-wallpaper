{"code": "precision mediump float;\n\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nmat2 rotate(float deg) {\n\t return mat2(sin(deg), cos(deg), cos(deg), -sin(deg));\n}\n\nvec3 squares(vec2 p, float m, float size) {\n\t   return mix(vec3(sin(p.x * size + m) + sin(p.y * size + m) > 0.0), vec3(sin(p.x * size + m + 1.0) + sin(p.y * size + m) < 0.0), 0.6);\n}\n\nvoid main( void ) {\n\tvec2 aspect = resolution.xy / min(resolution.x, resolution.y);\n\tvec2 p = gl_FragCoord.xy / min(resolution.x, resolution.y);\n\tvec2 n = p;\n\t\n\tp -= 0.5 * aspect; // centralize\n\tp *= rotate(3.14159265/4.0 + sin(time * 2.0) * 0.05); // swing\n\t\n\t//p *= 1.0/(sin(time * 0.5) * 0.5 + 0.70); // zoom \n\t\n\tfloat m = time * 10.0;\n\t\n\t#define size (12.5)\n\t\n\tvec3 color = squares(p, m * 0.25, size);\n\t\n\tfor (float i = 1.0; i < 7.0; i += 1.0) {\n\t\tif (distance(color, vec3(0.39, 0.39, 0.39)) < 0.02) {\n\t\t\tcolor = squares(p, m, size * pow(2.0, i));\n\t\t}\n\t}\n\t\n\tcolor -= distance(n, 0.5 * aspect);\n\t\n\tgl_FragColor = vec4 (color, 1.0);\n}", "user": "f34ecbe", "parent": null, "id": 46975}