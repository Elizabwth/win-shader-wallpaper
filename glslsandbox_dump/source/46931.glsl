{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 resolution;\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.6;\n    float a = 0.666;\n    vec2 shift = vec2(100.0);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 6.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution.xy*3.;\n    vec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*time);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.15*time );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.126*time);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(1,0.1,0.0),\n                vec3(1,0.1,0.0),\n                clamp((f*f)*5.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(1,0.2,0.1),\n                clamp(length(q),0.0,0.2));\n\n    color = mix(color,\n                vec3(1,0.2,0.1),\n                clamp(length(r.x),0.0,0.3));\n\n\t\n\t\n    gl_FragColor = vec4((f*f*f+.2*f*f+.3*f)*color,1.);\n}", "user": "fb4121", "parent": "/e#46929.4", "id": 46931}