{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nvec2 mousex = mouse;\n#define dist 0.02\n#define intensity 1.5 / dist\n#define pattern 20.0\n#define tint vec3(1.0)\n//#define tint  vec3(0.2,0.4,0.8)\n#define chromaShift 0.5\n\n/*//board pattern\nvec3 tex2D(vec2 uv){\n\tif (uv.x <= 0.0 || uv.y <= 0.0 || uv.x >= 1.0 || uv.y >= 1.0) return vec3(0.0);\n\tvec3 color = vec3(0.0);\n\tcolor += mod(floor(uv.x * pattern), 2.0) * 0.3;\n\tcolor += mod(floor(uv.y * pattern), 2.0) * 0.3;\n\tcolor.rg *= uv;\n\treturn color;\n}\n//*/\n\n///*//mouse circle\nvec3 tex2D(vec2 uv){\n\tif (uv.x == 0.0 || uv.y == 0.0 || uv.x == 1.0 || uv.y == 1.0) return vec3(0.0);\n\tfloat d = distance(uv, mousex) ;\n\tif (d < dist) return vec3(((dist-d)/dist),((dist-d)/dist),((dist-d)/dist))*tint;\n\treturn vec3(0.0);\n}\n//*/\n\n/*//moving circle\nvec3 tex2D(vec2 uv){\n\tif (uv.x == 0.0 || uv.y == 0.0 || uv.x == 1.0 || uv.y == 1.0) return vec3(0.0);\n\tfloat s = time * 1.0; \n\tfloat a = sin(time * 1.2) * 0.2 + 0.2;\n\t\n\tfloat d = distance(uv, 0.5+vec2(cos(s)*a, sin(s)*a)) ;\n\tif (d < dist) return vec3(0.2*((dist-d)/dist),0.4*((dist-d)/dist),0.8*((dist-d)/dist));\n\treturn vec3(0.0);\n}\n//*/\n\nvec3 flare(float px, float py, float pz, float cShift, float i)\n{\n\tvec3 t=vec3(0.);\n\t\n\t//vec3 lx = vec3(.01,.01,.3);\n\tvec2 uv=gl_FragCoord.xy / resolution.xy-.5;\n\tfloat x = length(uv);\n\tuv*=pow(4.0*x,py)*px+pz;\n\tt.r = tex2D(clamp(uv*(1.0+cShift*chromaShift)+0.5, 0.0, 1.0)).r;\n\tt.g = tex2D(clamp(uv+0.5, 0.0, 1.0)).g;\n\tt.b = tex2D(clamp(uv*(1.0-cShift*chromaShift)+0.5, 0.0, 1.0)).b;\n\tt = t*t;\n\tt *= clamp(.6-length(uv), 0.0, 1.0);\n\tt *= clamp(length(uv*20.0), 0.0, 1.0);\n\tt *= i;\n\t/*\n\t//t=t*lx;\n\tS=m.xy-.5;\n\tS*=1.75;\n\tt*=clamp(1.-dot(S,S), 0.0, 1.0);\n\tfloat n=max(t.x,max(t.y,t.z)),c=n/(1.+n);\n\t//c=pow(c,10.0);\n\tt.xyz*=c;\n\t//*/\n\treturn t;\n}\n\nvoid main( void ) \n{\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\t\n\t\n\tvec3 finalColor =vec3(0.0);\n\t\n\t\n\t\n\tfloat tt = 1.0 / abs( distance(uv, mousex) * intensity );\n\tfloat v = 1.0 / abs( length((mousex-uv) * vec2(0.03, 1.0)) * (intensity*10.0) );\n\t\n\tfinalColor += tex2D(uv)*0.5;\n\tfinalColor += vec3(tt)*tint;\n\tfinalColor += vec3( v )*tint;\n\t\n\tfinalColor += flare(0.00005, 16.0, 0.0, 0.2, 1.0);\n\tfinalColor += flare(0.5, 2.0, 0.0, 0.1, 1.0);\n\tfinalColor += flare(20.0, 1.0, 0.0, 0.05, 1.0);\n\tfinalColor += flare(-10.0, 1.0, 0.0, 0.1, 1.0);\n\tfinalColor += flare(-10.0, 2.0, 0.0, 0.05, 2.0);\n\tfinalColor += flare(-1.0, 1.0, 0.0, 0.1, 2.0);\n\tfinalColor += flare(-0.00005, 16.0, 0.0, 0.2, 2.0);\n\t\n\t//finalColor = vec3(uv, 0.0);\n\t//finalColor = vec3(m, 0.0);\n\tgl_FragColor = vec4( finalColor, 1.0 );\n\n}", "user": "df50fa8", "parent": "/e#28447.11", "id": 47299}