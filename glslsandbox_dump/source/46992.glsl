{"code": "precision lowp float;\n\nuniform float time;\n\nuniform vec2 resolution;\n\nconst float count = 7.0;\n\nfloat Hash( vec2 p, in float s ){\n    return fract(sin(dot(vec3(p.xy,10.0 * abs(sin(s))),vec3(27.1,61.7, 12.4)))*271758.5453123);\n}\n\nfloat noise(in vec2 p, in float s)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f *= f * (3.0-2.0*f);\n    return mix(mix(Hash(i + vec2(0.,0.), s), Hash(i + vec2(1.,0.), s),f.x),mix(Hash(i + vec2(0.,1.), s), Hash(i + vec2(1.,1.), s),f.x),f.y) * s;\n}\n\nfloat fbm(vec2 p)\n{\n     float v = 0.0;\n     v += noise(p*1., sin(time));\n     v += noise(p*2., sin(time));\n     v += noise(p*4., sin(time));\n     v += noise(p*8., sin(time));\n     return v;\n}\n\nvoid main( void ) \n{\n\n\tvec2 uv = ( gl_FragCoord.xy / resolution.xy ) * 2.0 - 1.0;\n\tuv.x *= resolution.x/resolution.y;\n\n\tvec3 finalColor = vec3( 0.0 );\n\t\n\t\tfloat t = abs(1.0 / ((uv.y + fbm( uv + time)) * 5.0));\n\t\tfinalColor +=  t * vec3( sin(time) + sin(time), sin(time + 2.0), sin(time + 4.0) );\n\t\n\t\n\tgl_FragColor = vec4( finalColor, 2.0 );\n\n}", "user": "a98b191", "parent": "/e#46950.0", "id": 46992}