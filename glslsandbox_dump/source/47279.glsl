{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nvec2 rotate( vec2 matrix, float angle ) \n{\n\treturn vec2( matrix.x*cos(radians(angle)), matrix.x*sin(radians(angle)) ) + vec2( matrix.y*-sin(radians(angle)), matrix.y*cos(radians(angle)) );\n}\n\nvoid main( void ) \n{\n\tvec3 rColor = vec3(0.7, 0.1, 0.3)* ((sin(time*50.0)*0.5 + 3.14) * 0.066);\n\tvec3 gColor = vec3(0.0, 0.2, 0.5);\n\tvec3 bColor = vec3(0.9, 0.1, 0.0) * ((cos(time)+1.125) * 2.0);\n\tvec3 yColor = vec3(0.0, 0.0, 0.0);\n\n\tvec2 position = ( gl_FragCoord.xy / resolution.xy ) / 4.0;\n\tposition = gl_FragCoord.xy * 2.0 - resolution;\n\tposition /= min(resolution.x, resolution.y);\n\tposition = rotate(position, time);\n\t\n\tfloat a = sin(position.y * 1.3 - time * 0.1) / 1.0;\n\tfloat b = cos(position.y * 1.4 - time * 0.2) / 1.0;\n\tfloat c = sin(position.x * 1.5 - time * 0.2 + 3.14) / 2.0;\n\tfloat d = cos(position.y * 1.6 - time * 0.5 + 3.14) / 2.0;\n\t\n\tfloat e = 0.51 / abs(position.x + a);\n\tfloat f = 0.51 / abs(position.x + b);\n\tfloat g = 0.51 / abs(position.y + c);\n\tfloat h = 0.51 / abs(position.x + d);\n\t\n\tvec3 color = rColor * e * gColor * f + bColor * f * g * h * 0.01;\n\t\n\tgl_FragColor = vec4(color, 1.0);\n\n}", "user": "75a232e", "parent": "/e#47229.0", "id": 47279}