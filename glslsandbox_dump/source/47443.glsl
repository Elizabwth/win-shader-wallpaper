{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n// dashxdr was here 20120228\n\n// Sphere_Spiral  http://glslsandbox.com/e#7109\n// improved by I.G.P.\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define PI 3.1415927\n#define PI2 (PI*2.0)\n#define BALL_SIZE 2.20\n\nvoid main( void ) \n{\n\tvec2 position = (2.0*gl_FragCoord.xy - resolution) / resolution.xx;\n\tposition *= 11.+ mouse.x * 100.0;\n\tfloat r = length(position);\n\tfloat a = atan(position.y, position.x) + PI;\n\tfloat d = r - a + PI2;\n\tfloat n = floor(d/PI2);\n\td = d - n*PI2;\n\tfloat dd = (d < PI*2.9) ? 0.1 : 0.0;\n\tfloat da = a + n*PI2;\n\tfloat pos = da*da*.07 - time*1.3;\n\tvec3 norm = BALL_SIZE * vec3(fract(pos) - .5, d / PI2 - .5, 1.);\n\tfloat len = length(norm.xy);\n\tvec3 color = vec3(0.1, 0.1, 0.0);  // background\n\tif(len <= 1.0)   // hit sphere ?\n\t{\n\t\tnorm.z = sqrt(1.0 - len*len);\n\t\tvec3 lightdir = normalize(vec3(-0.0, -1.0, 1.0));\n\t\tdd = dot(lightdir, norm);\n\t\tdd = max(dd, 0.1);\n\t\tfloat rand = sin(floor(pos));\n\t\tcolor.rgb = dd*fract(rand*vec3(10.0, 1000.0, 100000.0));\n\t\tvec3 halfv = normalize(lightdir + vec3(0.0, 0.0, 1.0));\n\t\tfloat spec = dot(halfv, norm);\n\t\tspec = max(spec, 0.0);\n\t\tspec = pow(spec, 40.0);\n\t\tcolor += spec*vec3(3.0, 1.0, 1.0);\n\t}\n\tgl_FragColor.rgba = vec4(color, 1.0);\n}", "user": "79927aa", "parent": "/e#7109.0", "id": 47443}