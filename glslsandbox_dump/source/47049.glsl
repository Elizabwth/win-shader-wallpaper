{"code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\n// Bonzomatic's default shader translated to glsl sandbox format\n\n\nfloat fGlobalTime = time; // in seconds\nvec2 v2Resolution = resolution; // viewport resolution (in pixels)\n\nvec4 out_color;\n\nconst float hit = 0.000001;\nfloat t = fGlobalTime;\n\n\n\nvec3 lipo = vec3(2.0 + sin(t * 1.2) * 14.0, 22.0, -2.0),\n\tlico = vec3(.8, .2, 3.0);\n\nfloat obj(vec3 p)\n{\n\treturn length(p) - 4.0;\n}\n\nfloat sphere(vec3 p, float r)\n{\n\treturn length(p) - r;\n}\n\nfloat df(vec3 p)\n{\n\tfloat r = 999999.0;\n\t\n\tconst float num = 18.0;\n\tfor (float i=0.0;i<num; i += 1.0) {\n\t\tfloat x = sin(t + i * 3.0 / num) * 5.0, z = tan(t+i) * 5.0;\n\t\tr = min(r, sphere(p - vec3(x, sin(t + i * 1.5) + 2.0, 15.0 + z), 1.0 + tan(i+t) * 0.5));\n\t}\n\tr = min(r, obj(p - vec3(0.0, -4.3, 5.0)));\n\treturn r;\n}\n\n\nfloat shade(vec3 p)\n{\n\tfloat r = 1.0;\n\t\n\n\tvec3 rd = normalize(lipo - p);\n\tp += rd * 1.0;\n\t\n\tfor (float i = 0.0; i < 15.0; i += 1.0) {\n\t\tfloat d = df(p);\n\t\tif (d < 0.0) { p += d * rd; d = 0.0; }\n\t\t\t\n\t\tif (d < 1.0) {\n\t\t\tr *= d;\n\t\t}\n\t\telse\n\t\t{ p += d * rd * 0.9; }\n\t}\n\t\t\n\treturn r;\n}\n\nvoid main(void)\n{\n      vec2 uv = vec2(gl_FragCoord.x / v2Resolution.x, gl_FragCoord.y / v2Resolution.y);\n      uv -= 0.5;\n      uv /= vec2(v2Resolution.y / v2Resolution.x, 1);\n\n  vec3 ro = vec3(0.), sp = vec3(uv, 1.0), rd = normalize(sp-ro), \n\t  p = ro;\n\n\n\tvec3 l = vec3(0.0);\n\tfloat contrib = 1.0;\n\t\n\tfor (float i = 0.0; i < 100.0; i += 1.0) {\n\t\tfloat d = df(p);\n\t\tif (d < 0.0) { p += d * rd; d = 0.0; }\n\t\t\t\n\t\tif (d < hit) {\n\t\t\tvec3 e = vec3(0.001, 0.0, 0.0);\n\t\t\tvec3 norm = normalize(vec3(df(p-e.xyy), df(p-e.yxy), df(p-e.yyx)));\n\t\t\tvec3 lv = normalize(p - lipo);\n\t\t\t\n\t\t\tl = (1.0 - contrib) * l + (dot(lv, norm) * lico * shade(p) * 4.0 + vec3(0.1, 0.01, 0.05)) * contrib;\t\t\t\n\t\t\tcontrib *= 0.8;\n\t\t\t\n\t\t\tif (contrib < 0.1) break;\n\t\t\trd = reflect(rd, norm);\n\t\t\tp += rd * 0.001;\n\t\t\t\n\t\t}\n\t\telse\n\t\t{ p += d * rd * 0.9; }\n\t\t\n\t\tif (length(p) > 100.0) break;\n\t}\n\t\n\t\n      out_color = vec4(l, 0.0);\n\n\t \n      gl_FragColor = out_color;\n}", "user": "2c9786c", "parent": "/e#47048.1", "id": 47049}